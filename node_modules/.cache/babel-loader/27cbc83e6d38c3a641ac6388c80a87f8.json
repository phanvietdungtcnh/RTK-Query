{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nexports.__esModule = true;\nexports.factory = void 0;\n\nvar outvariant_1 = require(\"outvariant\");\n\nvar glossary_1 = require(\"./glossary\");\n\nvar first_1 = require(\"./utils/first\");\n\nvar executeQuery_1 = require(\"./query/executeQuery\");\n\nvar parseModelDefinition_1 = require(\"./model/parseModelDefinition\");\n\nvar createModel_1 = require(\"./model/createModel\");\n\nvar updateEntity_1 = require(\"./model/updateEntity\");\n\nvar OperationError_1 = require(\"./errors/OperationError\");\n\nvar Database_1 = require(\"./db/Database\");\n\nvar generateRestHandlers_1 = require(\"./model/generateRestHandlers\");\n\nvar generateGraphQLHandlers_1 = require(\"./model/generateGraphQLHandlers\");\n\nvar sync_1 = require(\"./extensions/sync\");\n/**\n * Create a database with the given models.\n */\n\n\nfunction factory(dictionary) {\n  var _a;\n\n  var db = new Database_1.Database(dictionary); // Initialize database extensions.\n\n  sync_1.sync(db);\n  return Object.entries(dictionary).reduce(function (acc, _a) {\n    var _b = __read(_a, 2),\n        modelName = _b[0],\n        props = _b[1];\n\n    acc[modelName] = createModelApi(dictionary, modelName, props, db);\n    return acc;\n  }, (_a = {}, _a[glossary_1.DATABASE_INSTANCE] = db, _a));\n}\n\nexports.factory = factory;\n\nfunction createModelApi(dictionary, modelName, definition, db) {\n  var parsedModel = parseModelDefinition_1.parseModelDefinition(dictionary, modelName, definition);\n  var primaryKey = parsedModel.primaryKey;\n  var api = {\n    create: function (initialValues) {\n      if (initialValues === void 0) {\n        initialValues = {};\n      }\n\n      var entity = createModel_1.createModel(modelName, definition, dictionary, parsedModel, initialValues, db);\n      var entityId = entity[entity[glossary_1.PRIMARY_KEY]];\n\n      if (!entityId) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: expected the primary key \"%s\" to have a value, but got: %s', modelName, primaryKey, entityId));\n      } // Prevent creation of multiple entities with the same primary key value.\n\n\n      if (db.has(modelName, entityId)) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: an entity with the same primary key \"%s\" (\"%s\") already exists.', modelName, entityId, entity[glossary_1.PRIMARY_KEY]));\n      }\n\n      db.create(modelName, entity);\n      return entity;\n    },\n    count: function (query) {\n      if (!query) {\n        return db.count(modelName);\n      }\n\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      return results.length;\n    },\n    findFirst: function (query) {\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var firstResult = first_1.first(results);\n\n      if (query.strict && firstResult == null) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findFirst\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n      }\n\n      return firstResult;\n    },\n    findMany: function (query) {\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n\n      if (results.length === 0 && query.strict) {\n        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n      }\n\n      return results;\n    },\n    getAll: function () {\n      return db.listEntities(modelName);\n    },\n    update: function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var prevRecord = first_1.first(results);\n\n      if (!prevRecord) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n        }\n\n        return null;\n      }\n\n      var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n\n      if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !== prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n        if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n        }\n      }\n\n      db.update(modelName, prevRecord, nextRecord);\n      return nextRecord;\n    },\n    updateMany: function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var updatedRecords = [];\n\n      if (records.length === 0) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n        }\n\n        return null;\n      }\n\n      records.forEach(function (prevRecord) {\n        var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n\n        if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !== prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n          if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n            throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n          }\n        }\n\n        db.update(modelName, prevRecord, nextRecord);\n        updatedRecords.push(nextRecord);\n      });\n      return updatedRecords;\n    },\n    \"delete\": function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n      var record = first_1.first(results);\n\n      if (!record) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"delete\" on the \"%s\" model: no entity found matching the query \"%o\".', modelName, query.where));\n        }\n\n        return null;\n      }\n\n      db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n      return record;\n    },\n    deleteMany: function (_a) {\n      var strict = _a.strict,\n          query = __rest(_a, [\"strict\"]);\n\n      var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n\n      if (records.length === 0) {\n        if (strict) {\n          throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"deleteMany\" on the \"%s\" model: no entities found matching the query \"%o\".', modelName, query.where));\n        }\n\n        return null;\n      }\n\n      records.forEach(function (record) {\n        db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n      });\n      return records;\n    },\n    toHandlers: function (type, baseUrl) {\n      if (type === 'graphql') {\n        return generateGraphQLHandlers_1.generateGraphQLHandlers(modelName, definition, api, baseUrl);\n      }\n\n      return generateRestHandlers_1.generateRestHandlers(modelName, definition, api, baseUrl);\n    },\n    toGraphQLSchema: function () {\n      return generateGraphQLHandlers_1.generateGraphQLSchema(modelName, definition, api);\n    }\n  };\n  return api;\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/node_modules/@mswjs/data/lib/factory.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__read","o","n","m","Symbol","iterator","r","ar","next","done","push","value","error","exports","__esModule","factory","outvariant_1","require","glossary_1","first_1","executeQuery_1","parseModelDefinition_1","createModel_1","updateEntity_1","OperationError_1","Database_1","generateRestHandlers_1","generateGraphQLHandlers_1","sync_1","dictionary","_a","db","Database","sync","entries","reduce","acc","_b","modelName","props","createModelApi","DATABASE_INSTANCE","definition","parsedModel","parseModelDefinition","primaryKey","api","create","initialValues","entity","createModel","entityId","PRIMARY_KEY","OperationError","OperationErrorType","MissingPrimaryKey","format","has","DuplicatePrimaryKey","count","query","results","executeQuery","findFirst","firstResult","first","strict","EntityNotFound","where","findMany","getAll","listEntities","update","prevRecord","nextRecord","updateEntity","data","updateMany","records","updatedRecords","forEach","record","deleteMany","toHandlers","type","baseUrl","generateGraphQLHandlers","generateRestHandlers","toGraphQLSchema","generateGraphQLSchema"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EACbD,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;;AACJ,MAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AACpE,QAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EACIR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;AACP;AACL,SAAOR,CAAP;AACH,CAVD;;AAWA,IAAIW,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;AACR,MAAIJ,CAAC,GAAGM,CAAC,CAACT,IAAF,CAAOO,CAAP,CAAR;AAAA,MAAmBK,CAAnB;AAAA,MAAsBC,EAAE,GAAG,EAA3B;AAAA,MAA+BnB,CAA/B;;AACA,MAAI;AACA,WAAO,CAACc,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACI,CAAC,GAAGT,CAAC,CAACW,IAAF,EAAL,EAAeC,IAApD,EAA0DF,EAAE,CAACG,IAAH,CAAQJ,CAAC,CAACK,KAAV;AAC7D,GAFD,CAGA,OAAOC,KAAP,EAAc;AAAExB,IAAAA,CAAC,GAAG;AAAEwB,MAAAA,KAAK,EAAEA;AAAT,KAAJ;AAAuB,GAHvC,SAIQ;AACJ,QAAI;AACA,UAAIN,CAAC,IAAI,CAACA,CAAC,CAACG,IAAR,KAAiBN,CAAC,GAAGN,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCM,CAAC,CAACT,IAAF,CAAOG,CAAP;AAC1C,KAFD,SAGQ;AAAE,UAAIT,CAAJ,EAAO,MAAMA,CAAC,CAACwB,KAAR;AAAgB;AACpC;;AACD,SAAOL,EAAP;AACH,CAfD;;AAgBAM,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,eAAD,CAArB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,8BAAD,CAApC;;AACA,IAAIK,aAAa,GAAGL,OAAO,CAAC,qBAAD,CAA3B;;AACA,IAAIM,cAAc,GAAGN,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAIO,gBAAgB,GAAGP,OAAO,CAAC,yBAAD,CAA9B;;AACA,IAAIQ,UAAU,GAAGR,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIS,sBAAsB,GAAGT,OAAO,CAAC,8BAAD,CAApC;;AACA,IAAIU,yBAAyB,GAAGV,OAAO,CAAC,iCAAD,CAAvC;;AACA,IAAIW,MAAM,GAAGX,OAAO,CAAC,mBAAD,CAApB;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBc,UAAjB,EAA6B;AACzB,MAAIC,EAAJ;;AACA,MAAIC,EAAE,GAAG,IAAIN,UAAU,CAACO,QAAf,CAAwBH,UAAxB,CAAT,CAFyB,CAGzB;;AACAD,EAAAA,MAAM,CAACK,IAAP,CAAYF,EAAZ;AACA,SAAOxC,MAAM,CAAC2C,OAAP,CAAeL,UAAf,EAA2BM,MAA3B,CAAkC,UAAUC,GAAV,EAAeN,EAAf,EAAmB;AACxD,QAAIO,EAAE,GAAGrC,MAAM,CAAC8B,EAAD,EAAK,CAAL,CAAf;AAAA,QAAwBQ,SAAS,GAAGD,EAAE,CAAC,CAAD,CAAtC;AAAA,QAA2CE,KAAK,GAAGF,EAAE,CAAC,CAAD,CAArD;;AACAD,IAAAA,GAAG,CAACE,SAAD,CAAH,GAAiBE,cAAc,CAACX,UAAD,EAAaS,SAAb,EAAwBC,KAAxB,EAA+BR,EAA/B,CAA/B;AACA,WAAOK,GAAP;AACH,GAJM,GAIHN,EAAE,GAAG,EAAL,EACAA,EAAE,CAACZ,UAAU,CAACuB,iBAAZ,CAAF,GAAmCV,EADnC,EAEAD,EANG,EAAP;AAOH;;AACDjB,OAAO,CAACE,OAAR,GAAkBA,OAAlB;;AACA,SAASyB,cAAT,CAAwBX,UAAxB,EAAoCS,SAApC,EAA+CI,UAA/C,EAA2DX,EAA3D,EAA+D;AAC3D,MAAIY,WAAW,GAAGtB,sBAAsB,CAACuB,oBAAvB,CAA4Cf,UAA5C,EAAwDS,SAAxD,EAAmEI,UAAnE,CAAlB;AACA,MAAIG,UAAU,GAAGF,WAAW,CAACE,UAA7B;AACA,MAAIC,GAAG,GAAG;AACNC,IAAAA,MAAM,EAAE,UAAUC,aAAV,EAAyB;AAC7B,UAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,QAAAA,aAAa,GAAG,EAAhB;AAAqB;;AACrD,UAAIC,MAAM,GAAG3B,aAAa,CAAC4B,WAAd,CAA0BZ,SAA1B,EAAqCI,UAArC,EAAiDb,UAAjD,EAA6Dc,WAA7D,EAA0EK,aAA1E,EAAyFjB,EAAzF,CAAb;AACA,UAAIoB,QAAQ,GAAGF,MAAM,CAACA,MAAM,CAAC/B,UAAU,CAACkC,WAAZ,CAAP,CAArB;;AACA,UAAI,CAACD,QAAL,EAAe;AACX,cAAM,IAAI3B,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCC,iBAAxE,EAA2FvC,YAAY,CAACwC,MAAb,CAAoB,4FAApB,EAAkHlB,SAAlH,EAA6HO,UAA7H,EAAyIM,QAAzI,CAA3F,CAAN;AACH,OAN4B,CAO7B;;;AACA,UAAIpB,EAAE,CAAC0B,GAAH,CAAOnB,SAAP,EAAkBa,QAAlB,CAAJ,EAAiC;AAC7B,cAAM,IAAI3B,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCI,mBAAxE,EAA6F1C,YAAY,CAACwC,MAAb,CAAoB,iGAApB,EAAuHlB,SAAvH,EAAkIa,QAAlI,EAA4IF,MAAM,CAAC/B,UAAU,CAACkC,WAAZ,CAAlJ,CAA7F,CAAN;AACH;;AACDrB,MAAAA,EAAE,CAACgB,MAAH,CAAUT,SAAV,EAAqBW,MAArB;AACA,aAAOA,MAAP;AACH,KAdK;AAeNU,IAAAA,KAAK,EAAE,UAAUC,KAAV,EAAiB;AACpB,UAAI,CAACA,KAAL,EAAY;AACR,eAAO7B,EAAE,CAAC4B,KAAH,CAASrB,SAAT,CAAP;AACH;;AACD,UAAIuB,OAAO,GAAGzC,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;AACA,aAAO8B,OAAO,CAAC/D,MAAf;AACH,KArBK;AAsBNiE,IAAAA,SAAS,EAAE,UAAUH,KAAV,EAAiB;AACxB,UAAIC,OAAO,GAAGzC,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;AACA,UAAIiC,WAAW,GAAG7C,OAAO,CAAC8C,KAAR,CAAcJ,OAAd,CAAlB;;AACA,UAAID,KAAK,CAACM,MAAN,IAAgBF,WAAW,IAAI,IAAnC,EAAyC;AACrC,cAAM,IAAIxC,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCa,cAAxE,EAAwFnD,YAAY,CAACwC,MAAb,CAAoB,2FAApB,EAAiHlB,SAAjH,EAA4HsB,KAAK,CAACQ,KAAlI,CAAxF,CAAN;AACH;;AACD,aAAOJ,WAAP;AACH,KA7BK;AA8BNK,IAAAA,QAAQ,EAAE,UAAUT,KAAV,EAAiB;AACvB,UAAIC,OAAO,GAAGzC,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;;AACA,UAAI8B,OAAO,CAAC/D,MAAR,KAAmB,CAAnB,IAAwB8D,KAAK,CAACM,MAAlC,EAA0C;AACtC,cAAM,IAAI1C,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCa,cAAxE,EAAwFnD,YAAY,CAACwC,MAAb,CAAoB,4FAApB,EAAkHlB,SAAlH,EAA6HsB,KAAK,CAACQ,KAAnI,CAAxF,CAAN;AACH;;AACD,aAAOP,OAAP;AACH,KApCK;AAqCNS,IAAAA,MAAM,EAAE,YAAY;AAChB,aAAOvC,EAAE,CAACwC,YAAH,CAAgBjC,SAAhB,CAAP;AACH,KAvCK;AAwCNkC,IAAAA,MAAM,EAAE,UAAU1C,EAAV,EAAc;AAClB,UAAIoC,MAAM,GAAGpC,EAAE,CAACoC,MAAhB;AAAA,UAAwBN,KAAK,GAAG1E,MAAM,CAAC4C,EAAD,EAAK,CAAC,QAAD,CAAL,CAAtC;;AACA,UAAI+B,OAAO,GAAGzC,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;AACA,UAAI0C,UAAU,GAAGtD,OAAO,CAAC8C,KAAR,CAAcJ,OAAd,CAAjB;;AACA,UAAI,CAACY,UAAL,EAAiB;AACb,YAAIP,MAAJ,EAAY;AACR,gBAAM,IAAI1C,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCa,cAAxE,EAAwFnD,YAAY,CAACwC,MAAb,CAAoB,wFAApB,EAA8GlB,SAA9G,EAAyHsB,KAAK,CAACQ,KAA/H,CAAxF,CAAN;AACH;;AACD,eAAO,IAAP;AACH;;AACD,UAAIM,UAAU,GAAGnD,cAAc,CAACoD,YAAf,CAA4BF,UAA5B,EAAwCb,KAAK,CAACgB,IAA9C,EAAoDlC,UAApD,CAAjB;;AACA,UAAIgC,UAAU,CAACD,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CAAV,KACAqB,UAAU,CAACA,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CADd,EACoD;AAChD,YAAIrB,EAAE,CAAC0B,GAAH,CAAOnB,SAAP,EAAkBoC,UAAU,CAACD,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CAA5B,CAAJ,EAAuE;AACnE,gBAAM,IAAI5B,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCI,mBAAxE,EAA6F1C,YAAY,CAACwC,MAAb,CAAoB,yGAApB,EAA+HlB,SAA/H,EAA0IoC,UAAU,CAACD,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CAApJ,EAA0LP,UAA1L,CAA7F,CAAN;AACH;AACJ;;AACDd,MAAAA,EAAE,CAACyC,MAAH,CAAUlC,SAAV,EAAqBmC,UAArB,EAAiCC,UAAjC;AACA,aAAOA,UAAP;AACH,KA3DK;AA4DNG,IAAAA,UAAU,EAAE,UAAU/C,EAAV,EAAc;AACtB,UAAIoC,MAAM,GAAGpC,EAAE,CAACoC,MAAhB;AAAA,UAAwBN,KAAK,GAAG1E,MAAM,CAAC4C,EAAD,EAAK,CAAC,QAAD,CAAL,CAAtC;;AACA,UAAIgD,OAAO,GAAG1D,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;AACA,UAAIgD,cAAc,GAAG,EAArB;;AACA,UAAID,OAAO,CAAChF,MAAR,KAAmB,CAAvB,EAA0B;AACtB,YAAIoE,MAAJ,EAAY;AACR,gBAAM,IAAI1C,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCa,cAAxE,EAAwFnD,YAAY,CAACwC,MAAb,CAAoB,8FAApB,EAAoHlB,SAApH,EAA+HsB,KAAK,CAACQ,KAArI,CAAxF,CAAN;AACH;;AACD,eAAO,IAAP;AACH;;AACDU,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUP,UAAV,EAAsB;AAClC,YAAIC,UAAU,GAAGnD,cAAc,CAACoD,YAAf,CAA4BF,UAA5B,EAAwCb,KAAK,CAACgB,IAA9C,EAAoDlC,UAApD,CAAjB;;AACA,YAAIgC,UAAU,CAACD,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CAAV,KACAqB,UAAU,CAACA,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CADd,EACoD;AAChD,cAAIrB,EAAE,CAAC0B,GAAH,CAAOnB,SAAP,EAAkBoC,UAAU,CAACD,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CAA5B,CAAJ,EAAuE;AACnE,kBAAM,IAAI5B,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCI,mBAAxE,EAA6F1C,YAAY,CAACwC,MAAb,CAAoB,6GAApB,EAAmIlB,SAAnI,EAA8IoC,UAAU,CAACD,UAAU,CAACvD,UAAU,CAACkC,WAAZ,CAAX,CAAxJ,EAA8LP,UAA9L,CAA7F,CAAN;AACH;AACJ;;AACDd,QAAAA,EAAE,CAACyC,MAAH,CAAUlC,SAAV,EAAqBmC,UAArB,EAAiCC,UAAjC;AACAK,QAAAA,cAAc,CAACrE,IAAf,CAAoBgE,UAApB;AACH,OAVD;AAWA,aAAOK,cAAP;AACH,KAlFK;AAmFN,cAAU,UAAUjD,EAAV,EAAc;AACpB,UAAIoC,MAAM,GAAGpC,EAAE,CAACoC,MAAhB;AAAA,UAAwBN,KAAK,GAAG1E,MAAM,CAAC4C,EAAD,EAAK,CAAC,QAAD,CAAL,CAAtC;;AACA,UAAI+B,OAAO,GAAGzC,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;AACA,UAAIkD,MAAM,GAAG9D,OAAO,CAAC8C,KAAR,CAAcJ,OAAd,CAAb;;AACA,UAAI,CAACoB,MAAL,EAAa;AACT,YAAIf,MAAJ,EAAY;AACR,gBAAM,IAAI1C,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCa,cAAxE,EAAwFnD,YAAY,CAACwC,MAAb,CAAoB,wFAApB,EAA8GlB,SAA9G,EAAyHsB,KAAK,CAACQ,KAA/H,CAAxF,CAAN;AACH;;AACD,eAAO,IAAP;AACH;;AACDrC,MAAAA,EAAE,CAAC,QAAD,CAAF,CAAaO,SAAb,EAAwB2C,MAAM,CAACA,MAAM,CAAC/D,UAAU,CAACkC,WAAZ,CAAP,CAA9B;AACA,aAAO6B,MAAP;AACH,KA/FK;AAgGNC,IAAAA,UAAU,EAAE,UAAUpD,EAAV,EAAc;AACtB,UAAIoC,MAAM,GAAGpC,EAAE,CAACoC,MAAhB;AAAA,UAAwBN,KAAK,GAAG1E,MAAM,CAAC4C,EAAD,EAAK,CAAC,QAAD,CAAL,CAAtC;;AACA,UAAIgD,OAAO,GAAG1D,cAAc,CAAC0C,YAAf,CAA4BxB,SAA5B,EAAuCO,UAAvC,EAAmDe,KAAnD,EAA0D7B,EAA1D,CAAd;;AACA,UAAI+C,OAAO,CAAChF,MAAR,KAAmB,CAAvB,EAA0B;AACtB,YAAIoE,MAAJ,EAAY;AACR,gBAAM,IAAI1C,gBAAgB,CAAC6B,cAArB,CAAoC7B,gBAAgB,CAAC8B,kBAAjB,CAAoCa,cAAxE,EAAwFnD,YAAY,CAACwC,MAAb,CAAoB,8FAApB,EAAoHlB,SAApH,EAA+HsB,KAAK,CAACQ,KAArI,CAAxF,CAAN;AACH;;AACD,eAAO,IAAP;AACH;;AACDU,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAC9BlD,QAAAA,EAAE,CAAC,QAAD,CAAF,CAAaO,SAAb,EAAwB2C,MAAM,CAACA,MAAM,CAAC/D,UAAU,CAACkC,WAAZ,CAAP,CAA9B;AACH,OAFD;AAGA,aAAO0B,OAAP;AACH,KA7GK;AA8GNK,IAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACjC,UAAID,IAAI,KAAK,SAAb,EAAwB;AACpB,eAAOzD,yBAAyB,CAAC2D,uBAA1B,CAAkDhD,SAAlD,EAA6DI,UAA7D,EAAyEI,GAAzE,EAA8EuC,OAA9E,CAAP;AACH;;AACD,aAAO3D,sBAAsB,CAAC6D,oBAAvB,CAA4CjD,SAA5C,EAAuDI,UAAvD,EAAmEI,GAAnE,EAAwEuC,OAAxE,CAAP;AACH,KAnHK;AAoHNG,IAAAA,eAAe,EAAE,YAAY;AACzB,aAAO7D,yBAAyB,CAAC8D,qBAA1B,CAAgDnD,SAAhD,EAA2DI,UAA3D,EAAuEI,GAAvE,CAAP;AACH;AAtHK,GAAV;AAwHA,SAAOA,GAAP;AACH","sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nexports.factory = void 0;\nvar outvariant_1 = require(\"outvariant\");\nvar glossary_1 = require(\"./glossary\");\nvar first_1 = require(\"./utils/first\");\nvar executeQuery_1 = require(\"./query/executeQuery\");\nvar parseModelDefinition_1 = require(\"./model/parseModelDefinition\");\nvar createModel_1 = require(\"./model/createModel\");\nvar updateEntity_1 = require(\"./model/updateEntity\");\nvar OperationError_1 = require(\"./errors/OperationError\");\nvar Database_1 = require(\"./db/Database\");\nvar generateRestHandlers_1 = require(\"./model/generateRestHandlers\");\nvar generateGraphQLHandlers_1 = require(\"./model/generateGraphQLHandlers\");\nvar sync_1 = require(\"./extensions/sync\");\n/**\n * Create a database with the given models.\n */\nfunction factory(dictionary) {\n    var _a;\n    var db = new Database_1.Database(dictionary);\n    // Initialize database extensions.\n    sync_1.sync(db);\n    return Object.entries(dictionary).reduce(function (acc, _a) {\n        var _b = __read(_a, 2), modelName = _b[0], props = _b[1];\n        acc[modelName] = createModelApi(dictionary, modelName, props, db);\n        return acc;\n    }, (_a = {},\n        _a[glossary_1.DATABASE_INSTANCE] = db,\n        _a));\n}\nexports.factory = factory;\nfunction createModelApi(dictionary, modelName, definition, db) {\n    var parsedModel = parseModelDefinition_1.parseModelDefinition(dictionary, modelName, definition);\n    var primaryKey = parsedModel.primaryKey;\n    var api = {\n        create: function (initialValues) {\n            if (initialValues === void 0) { initialValues = {}; }\n            var entity = createModel_1.createModel(modelName, definition, dictionary, parsedModel, initialValues, db);\n            var entityId = entity[entity[glossary_1.PRIMARY_KEY]];\n            if (!entityId) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.MissingPrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: expected the primary key \"%s\" to have a value, but got: %s', modelName, primaryKey, entityId));\n            }\n            // Prevent creation of multiple entities with the same primary key value.\n            if (db.has(modelName, entityId)) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to create a \"%s\" entity: an entity with the same primary key \"%s\" (\"%s\") already exists.', modelName, entityId, entity[glossary_1.PRIMARY_KEY]));\n            }\n            db.create(modelName, entity);\n            return entity;\n        },\n        count: function (query) {\n            if (!query) {\n                return db.count(modelName);\n            }\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            return results.length;\n        },\n        findFirst: function (query) {\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var firstResult = first_1.first(results);\n            if (query.strict && firstResult == null) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findFirst\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n            }\n            return firstResult;\n        },\n        findMany: function (query) {\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            if (results.length === 0 && query.strict) {\n                throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"findMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n            }\n            return results;\n        },\n        getAll: function () {\n            return db.listEntities(modelName);\n        },\n        update: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var prevRecord = first_1.first(results);\n            if (!prevRecord) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: no entity found matching the query \"%j\".', modelName, query.where));\n                }\n                return null;\n            }\n            var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n            if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !==\n                prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n                if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"update\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n                }\n            }\n            db.update(modelName, prevRecord, nextRecord);\n            return nextRecord;\n        },\n        updateMany: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var updatedRecords = [];\n            if (records.length === 0) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: no entities found matching the query \"%j\".', modelName, query.where));\n                }\n                return null;\n            }\n            records.forEach(function (prevRecord) {\n                var nextRecord = updateEntity_1.updateEntity(prevRecord, query.data, definition);\n                if (nextRecord[prevRecord[glossary_1.PRIMARY_KEY]] !==\n                    prevRecord[prevRecord[glossary_1.PRIMARY_KEY]]) {\n                    if (db.has(modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]])) {\n                        throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.DuplicatePrimaryKey, outvariant_1.format('Failed to execute \"updateMany\" on the \"%s\" model: the entity with a primary key \"%s\" (\"%s\") already exists.', modelName, nextRecord[prevRecord[glossary_1.PRIMARY_KEY]], primaryKey));\n                    }\n                }\n                db.update(modelName, prevRecord, nextRecord);\n                updatedRecords.push(nextRecord);\n            });\n            return updatedRecords;\n        },\n        \"delete\": function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var results = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            var record = first_1.first(results);\n            if (!record) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"delete\" on the \"%s\" model: no entity found matching the query \"%o\".', modelName, query.where));\n                }\n                return null;\n            }\n            db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n            return record;\n        },\n        deleteMany: function (_a) {\n            var strict = _a.strict, query = __rest(_a, [\"strict\"]);\n            var records = executeQuery_1.executeQuery(modelName, primaryKey, query, db);\n            if (records.length === 0) {\n                if (strict) {\n                    throw new OperationError_1.OperationError(OperationError_1.OperationErrorType.EntityNotFound, outvariant_1.format('Failed to execute \"deleteMany\" on the \"%s\" model: no entities found matching the query \"%o\".', modelName, query.where));\n                }\n                return null;\n            }\n            records.forEach(function (record) {\n                db[\"delete\"](modelName, record[record[glossary_1.PRIMARY_KEY]]);\n            });\n            return records;\n        },\n        toHandlers: function (type, baseUrl) {\n            if (type === 'graphql') {\n                return generateGraphQLHandlers_1.generateGraphQLHandlers(modelName, definition, api, baseUrl);\n            }\n            return generateRestHandlers_1.generateRestHandlers(modelName, definition, api, baseUrl);\n        },\n        toGraphQLSchema: function () {\n            return generateGraphQLHandlers_1.generateGraphQLSchema(modelName, definition, api);\n        }\n    };\n    return api;\n}\n"]},"metadata":{},"sourceType":"script"}