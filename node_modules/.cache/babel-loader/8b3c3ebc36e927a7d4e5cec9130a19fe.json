{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Practice_ReactJS\\\\RTK_Query\\\\src\\\\features\\\\album\\\\SingleAlbumPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Spinner } from '../../components/Spinner';\nimport { useGetAlbumQuery, useGetPhotosQuery } from '../api/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SingleAlbumPage = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const {\n    albumId\n  } = match.params;\n  const {\n    data: album,\n    isFetching,\n    isSuccess\n  } = useGetAlbumQuery(albumId);\n  const {\n    data: listPhoto\n  } = useGetPhotosQuery(undefined, {\n    selectFromResult: result => {\n      return { ...result\n      };\n    }\n  });\n  const CommentById = useMemo(() => listPhoto === null || listPhoto === void 0 ? void 0 : listPhoto.filter(_ref2 => {\n    let {\n      albumId: photoId\n    } = _ref2;\n    return photoId === Number(albumId);\n  }, [listPhoto, albumId]));\n  const photoName = CommentById === null || CommentById === void 0 ? void 0 : CommentById.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-photos\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/photo/${photo === null || photo === void 0 ? void 0 : photo.id}`,\n        children: photo === null || photo === void 0 ? void 0 : photo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo.thumbnailUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, photo === null || photo === void 0 ? void 0 : photo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this));\n  let content;\n\n  if (isFetching) {\n    content = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this);\n  } else if (isSuccess) {\n    content = /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: album.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-albums\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Name Albums:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-list\",\n      children: photoName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SingleAlbumPage, \"NGb0bVMvPMKqY0Ngci7Rh1LUHWM=\", false, function () {\n  return [useGetAlbumQuery, useGetPhotosQuery];\n});\n\n_c = SingleAlbumPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleAlbumPage\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/src/features/album/SingleAlbumPage.js"],"names":["React","useMemo","useSelector","Link","Spinner","useGetAlbumQuery","useGetPhotosQuery","SingleAlbumPage","match","albumId","params","data","album","isFetching","isSuccess","listPhoto","undefined","selectFromResult","result","CommentById","filter","photoId","Number","photoName","map","photo","id","title","thumbnailUrl","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,iBAApD;;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAAK,CAACE,MAA1B;AAEA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAAyCT,gBAAgB,CAACI,OAAD,CAA/D;AAEA,QAAM;AAAEE,IAAAA,IAAI,EAAEI;AAAR,MAAsBT,iBAAiB,CAACU,SAAD,EAAY;AACrDC,IAAAA,gBAAgB,EAAEC,MAAM,IAAI;AAC1B,aAAQ,EACN,GAAGA;AADG,OAAR;AAGD;AALoD,GAAZ,CAA7C;AAQA,QAAMC,WAAW,GAAGlB,OAAO,CAAC,MAAMc,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAEK,MAAX,CAAkB;AAAA,QAAC;AAACX,MAAAA,OAAO,EAAEY;AAAV,KAAD;AAAA,WAAwBA,OAAO,KAAKC,MAAM,CAACb,OAAD,CAA1C;AAAA,GAAlB,EAAuE,CAACM,SAAD,EAAYN,OAAZ,CAAvE,CAAP,CAA3B;AAEA,QAAMc,SAAS,GAAGJ,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEK,GAAb,CAAiBC,KAAK,iBACpC;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA,4BACI;AAAA,6BAAI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASA,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAEC,EAAG,EAA9B;AAAA,kBAAkCD,KAAlC,aAAkCA,KAAlC,uBAAkCA,KAAK,CAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAEF,KAAK,CAACG,YAAhB;AAA8B,MAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAAUH,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAEC,EAAjB;AAAA;AAAA;AAAA;AAAA,UADc,CAAlB;AAOA,MAAIG,OAAJ;;AACA,MAAIhB,UAAJ,EAAgB;AACZgB,IAAAA,OAAO,gBAAG,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAAV;AACH,GAFD,MAEO,IAAIf,SAAJ,EAAe;AAClBe,IAAAA,OAAO,gBACP;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,6BACI;AAAA,kBAAKjB,KAAK,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKE,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKN;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA5CM;;GAAMhB,e;UAGsCF,gB,EAEnBC,iB;;;KALnBC,e","sourcesContent":["import React, {useMemo} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Spinner } from '../../components/Spinner'\r\nimport { useGetAlbumQuery, useGetPhotosQuery } from '../api/apiSlice'\r\n\r\nexport const SingleAlbumPage = ({ match }) => {\r\n    const { albumId } = match.params\r\n\r\n    const { data: album, isFetching, isSuccess } = useGetAlbumQuery(albumId)\r\n\r\n    const { data: listPhoto } = useGetPhotosQuery(undefined, {\r\n        selectFromResult: result => {\r\n          return ({\r\n            ...result,\r\n          })\r\n        } \r\n    })\r\n\r\n    const CommentById = useMemo(() => listPhoto?.filter(({albumId: photoId}) => photoId === Number(albumId), [listPhoto, albumId]))\r\n\r\n    const photoName = CommentById?.map(photo => (\r\n        <div key={photo?.id} className=\"item-photos\">\r\n            <h3><Link to={`/photo/${photo?.id}`}>{photo?.title}</Link></h3>\r\n            <img src={photo.thumbnailUrl} alt=\"\" />\r\n        </div>\r\n    ))\r\n\r\n    let content\r\n    if (isFetching) {\r\n        content = <Spinner text=\"Loading...\" />\r\n    } else if (isSuccess) {\r\n        content = (\r\n        <article className=\"post\">\r\n            <h2>{album.title}</h2>\r\n        </article>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"name-albums\">\r\n                <h2>Name Albums:</h2>\r\n                {content}\r\n            </div>\r\n            <div className=\"photo-list\">\r\n                {photoName}\r\n            </div>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}