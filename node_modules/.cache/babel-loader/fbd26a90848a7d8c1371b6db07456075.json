{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Practice_ReactJS\\\\RTK_Query\\\\src\\\\features\\\\photo\\\\PhotoList.js\",\n    _s = $RefreshSig$();\n\nimport { Spinner } from '../../components/Spinner';\nimport React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetPhotosQuery } from '../api/apiSlice';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet PhotoExcerpt = _ref => {\n  let {\n    photo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: photo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo.thumbnailUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/photo/${photo.id}`,\n      className: \"button muted-button\",\n      children: \"View Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, photo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PhotoExcerpt;\nPhotoExcerpt = /*#__PURE__*/React.memo(PhotoExcerpt);\nexport const PhotoList = () => {\n  _s();\n\n  const {\n    data: photo = [],\n    isFetching,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetPhotosQuery();\n  const sortedPhoto = useMemo(() => {\n    const sortedPhoto = photo.slice();\n    return sortedPhoto;\n  }, [photo]);\n  let body;\n\n  if (isLoading) {\n    body = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  } else if (isSuccess) {\n    const renderedPhoto = sortedPhoto.map(photo => /*#__PURE__*/_jsxDEV(PhotoExcerpt, {\n      photo: photo\n    }, photo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this));\n    const containerClassname = classnames('posts-container', {\n      disabled: isFetching\n    });\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerClassname,\n      children: renderedPhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } else if (isError) {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"link-label\",\n      children: \"Photo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), body]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhotoList, \"JcPX9hXgI6GDgABrtmi8i6cvgeU=\", false, function () {\n  return [useGetPhotosQuery];\n});\n\n_c2 = PhotoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotoExcerpt\");\n$RefreshReg$(_c2, \"PhotoList\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/src/features/photo/PhotoList.js"],"names":["Spinner","React","useMemo","Link","useGetPhotosQuery","classnames","PhotoExcerpt","photo","title","thumbnailUrl","id","memo","PhotoList","data","isFetching","isLoading","isSuccess","isError","error","sortedPhoto","slice","body","renderedPhoto","map","containerClassname","disabled"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;;AAGA,IAAIC,YAAY,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,sBACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,YAAhB;AAA8B,MAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASF,KAAK,CAACG,EAAG,EAA7B;AAAgC,MAAA,SAAS,EAAC,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAuCH,KAAK,CAACG,EAA7C;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;KAAIJ,Y;AAYJA,YAAY,gBAAGL,KAAK,CAACU,IAAN,CAAWL,YAAX,CAAf;AAEA,OAAO,MAAMM,SAAS,GAAG,MAAM;AAAA;;AAE7B,QAAM;AACJC,IAAAA,IAAI,EAAEN,KAAK,GAAG,EADV;AAEJO,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFd,iBAAiB,EAPrB;AASA,QAAMe,WAAW,GAAGjB,OAAO,CAAC,MAAM;AAChC,UAAMiB,WAAW,GAAGZ,KAAK,CAACa,KAAN,EAApB;AAEA,WAAOD,WAAP;AACD,GAJ0B,EAIxB,CAACZ,KAAD,CAJwB,CAA3B;AAMA,MAAIc,IAAJ;;AAEA,MAAIN,SAAJ,EAAe;AACbM,IAAAA,IAAI,gBAAG,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIL,SAAJ,EAAe;AACpB,UAAMM,aAAa,GAAGH,WAAW,CAACI,GAAZ,CAAgBhB,KAAK,iBACzC,QAAC,YAAD;AAA6B,MAAA,KAAK,EAAEA;AAApC,OAAmBA,KAAK,CAACG,EAAzB;AAAA;AAAA;AAAA;AAAA,YADoB,CAAtB;AAIA,UAAMc,kBAAkB,GAAGnB,UAAU,CAAC,iBAAD,EAAoB;AACvDoB,MAAAA,QAAQ,EAAEX;AAD6C,KAApB,CAArC;AAIAO,IAAAA,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAEG,kBAAhB;AAAA,gBAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAVM,MAUA,IAAIL,OAAJ,EAAa;AAClBI,IAAAA,IAAI,gBAAG;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzCM;;GAAMT,S;UASPR,iB;;;MATOQ,S","sourcesContent":["import { Spinner } from '../../components/Spinner'\r\nimport React, { useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useGetPhotosQuery } from '../api/apiSlice'\r\n\r\nimport classnames from 'classnames'\r\n\r\n\r\nlet PhotoExcerpt = ({ photo }) => {\r\n  return (\r\n    <article className=\"post-excerpt\" key={photo.id}>\r\n      <h3>{photo.title}</h3>\r\n      <img src={photo.thumbnailUrl} alt=\"\" />\r\n\r\n      <Link to={`/photo/${photo.id}`} className=\"button muted-button\">\r\n        View Photo\r\n      </Link>\r\n    </article>\r\n  )\r\n}\r\nPhotoExcerpt = React.memo(PhotoExcerpt)\r\n\r\nexport const PhotoList = () => {\r\n\r\n  const {\r\n    data: photo = [],\r\n    isFetching,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n  } = useGetPhotosQuery()\r\n\r\n  const sortedPhoto = useMemo(() => {\r\n    const sortedPhoto = photo.slice()\r\n\r\n    return sortedPhoto\r\n  }, [photo])\r\n\r\n  let body\r\n\r\n  if (isLoading) {\r\n    body = <Spinner text=\"Loading...\" />\r\n  } else if (isSuccess) {\r\n    const renderedPhoto = sortedPhoto.map(photo => (\r\n      <PhotoExcerpt key={photo.id} photo={photo} />\r\n    ))\r\n\r\n    const containerClassname = classnames('posts-container', {\r\n      disabled: isFetching\r\n    })\r\n\r\n    body = <div className={containerClassname}>{renderedPhoto}</div>\r\n  } else if (isError) {\r\n    body = <div>{error}</div>\r\n  }\r\n\r\n  return (\r\n    <section className=\"posts-list\">\r\n      <h2 className=\"link-label\">Photo List</h2>\r\n      {body}\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}