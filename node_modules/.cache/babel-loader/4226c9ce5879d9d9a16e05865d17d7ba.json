{"ast":null,"code":"import { createEntityAdapter, createSelector } from '@reduxjs/toolkit';\nimport { apiSlice } from '../api/apiSlice';\nconst usersAdapter = createEntityAdapter();\nconst initialState = usersAdapter.getInitialState();\nexport const extendedApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getUsers: builder.query({\n      query: () => '/users',\n      transformResponse: res => {\n        return usersAdapter.setAll(initialState, res);\n      }\n    })\n  })\n});\nexport const {\n  useGetUsersQuery\n} = extendedApiSlice;\nexport const selectUsersResult = extendedApiSlice.endpoints.getUsers.select();\nconst selectUsersData = createSelector(selectUsersResult, usersResult => usersResult.data);\nexport const {\n  selectAll: selectAllUsers,\n  selectById: selectUserById\n} = usersAdapter.getSelectors(state => {\n  var _selectUsersData;\n\n  return (_selectUsersData = selectUsersData(state)) !== null && _selectUsersData !== void 0 ? _selectUsersData : initialState;\n});","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/src/features/users/usersSlice.js"],"names":["createEntityAdapter","createSelector","apiSlice","usersAdapter","initialState","getInitialState","extendedApiSlice","injectEndpoints","endpoints","builder","getUsers","query","transformResponse","res","setAll","useGetUsersQuery","selectUsersResult","select","selectUsersData","usersResult","data","selectAll","selectAllUsers","selectById","selectUserById","getSelectors","state"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,cAA9B,QAAoD,kBAApD;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,MAAMC,YAAY,GAAGH,mBAAmB,EAAxC;AAEA,MAAMI,YAAY,GAAGD,YAAY,CAACE,eAAb,EAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAGJ,QAAQ,CAACK,eAAT,CAAyB;AACvDC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAE,MAAM,QADS;AAEtBC,MAAAA,iBAAiB,EAAGC,GAAD,IAAS;AAC1B,eAAOV,YAAY,CAACW,MAAb,CAAoBV,YAApB,EAAkCS,GAAlC,CAAP;AACD;AAJqB,KAAd;AADa,GAAd;AAD4C,CAAzB,CAAzB;AAWP,OAAO,MAAM;AAAEE,EAAAA;AAAF,IAAuBT,gBAA7B;AAEP,OAAO,MAAMU,iBAAiB,GAAGV,gBAAgB,CAACE,SAAjB,CAA2BE,QAA3B,CAAoCO,MAApC,EAA1B;AAEP,MAAMC,eAAe,GAAGjB,cAAc,CACpCe,iBADoC,EAEnCG,WAAD,IAAiBA,WAAW,CAACC,IAFO,CAAtC;AAKA,OAAO,MAAM;AACXC,EAAAA,SAAS,EAAEC,cADA;AAEXC,EAAAA,UAAU,EAAEC;AAFD,IAGTrB,YAAY,CAACsB,YAAb,CAA2BC,KAAD;AAAA;;AAAA,6BAAWR,eAAe,CAACQ,KAAD,CAA1B,+DAAqCtB,YAArC;AAAA,CAA1B,CAHG","sourcesContent":["import { createEntityAdapter, createSelector } from '@reduxjs/toolkit'\r\n\r\nimport { apiSlice } from '../api/apiSlice'\r\n\r\nconst usersAdapter = createEntityAdapter()\r\n\r\nconst initialState = usersAdapter.getInitialState()\r\n\r\nexport const extendedApiSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    getUsers: builder.query({\r\n      query: () => '/users',\r\n      transformResponse: (res) => {\r\n        return usersAdapter.setAll(initialState, res)\r\n      },\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useGetUsersQuery } = extendedApiSlice\r\n\r\nexport const selectUsersResult = extendedApiSlice.endpoints.getUsers.select()\r\n\r\nconst selectUsersData = createSelector(\r\n  selectUsersResult,\r\n  (usersResult) => usersResult.data\r\n)\r\n\r\nexport const {\r\n  selectAll: selectAllUsers,\r\n  selectById: selectUserById,\r\n} = usersAdapter.getSelectors((state) => selectUsersData(state) ?? initialState)\r\n"]},"metadata":{},"sourceType":"module"}