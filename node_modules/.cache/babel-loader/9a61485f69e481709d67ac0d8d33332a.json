{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit';\nimport { client } from '../../api/client';\nconst usersAdapter = createEntityAdapter();\nconst initialState = usersAdapter.getInitialState();\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users');\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, usersAdapter.setAll);\n  }\n\n});\nexport default usersSlice.reducer;\nexport const {\n  selectAll: selectAllUsers,\n  selectById: selectUserById\n} = usersAdapter.getSelectors(state => state.users);","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Nodric/finnal/src/features/users/usersSlice.js"],"names":["createSlice","createAsyncThunk","createEntityAdapter","client","usersAdapter","initialState","getInitialState","fetchUsers","response","get","data","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","setAll","reducer","selectAll","selectAllUsers","selectById","selectUserById","getSelectors","state","users"],"mappings":"AAAA,SACIA,WADJ,EAEIC,gBAFJ,EAGIC,mBAHJ,QAIO,kBAJP;AAKA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAGF,mBAAmB,EAAxC;AAEA,MAAMG,YAAY,GAAGD,YAAY,CAACE,eAAb,EAArB;AAEA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AACvE,QAAMO,QAAQ,GAAG,MAAML,MAAM,CAACM,GAAP,CAAW,gBAAX,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACH,CAHyC,CAAnC;AAKP,MAAMC,UAAU,GAAGX,WAAW,CAAC;AAC3BY,EAAAA,IAAI,EAAE,OADqB;AAE3BP,EAAAA,YAF2B;AAG3BQ,EAAAA,QAAQ,EAAE,EAHiB;;AAI3BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACnBA,IAAAA,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACU,SAA3B,EAAsCb,YAAY,CAACc,MAAnD;AACH;;AAN0B,CAAD,CAA9B;AASA,eAAeP,UAAU,CAACQ,OAA1B;AAEA,OAAO,MAAM;AACTC,EAAAA,SAAS,EAAEC,cADF;AAETC,EAAAA,UAAU,EAAEC;AAFH,IAGTnB,YAAY,CAACoB,YAAb,CAA2BC,KAAD,IAAWA,KAAK,CAACC,KAA3C,CAHG","sourcesContent":["import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport { client } from '../../api/client'\r\n\r\nconst usersAdapter = createEntityAdapter()\r\n\r\nconst initialState = usersAdapter.getInitialState()\r\n\r\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\r\n    const response = await client.get('/fakeApi/users')\r\n    return response.data\r\n})\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'users',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers(builder) {\r\n        builder.addCase(fetchUsers.fulfilled, usersAdapter.setAll)\r\n    },\r\n})\r\n\r\nexport default usersSlice.reducer\r\n\r\nexport const {\r\n    selectAll: selectAllUsers,\r\n    selectById: selectUserById,\r\n} = usersAdapter.getSelectors((state) => state.users)\r\n"]},"metadata":{},"sourceType":"module"}