{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interceptFetch = void 0;\n\nvar headers_utils_1 = require(\"headers-utils\");\n\nvar toIsoResponse_1 = require(\"../../utils/toIsoResponse\");\n\nvar uuid_1 = require(\"../../utils/uuid\");\n\nvar debug = require('debug')('fetch');\n\nvar interceptFetch = function (observer, resolver) {\n  var pureFetch = window.fetch;\n  debug('replacing \"window.fetch\"...');\n\n  window.fetch = function (input, init) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var ref, url, method, isoRequest, response, isomorphicResponse;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            ref = new Request(input, init);\n            url = typeof input === 'string' ? input : input.url;\n            method = (init === null || init === void 0 ? void 0 : init.method) || 'GET';\n            debug('[%s] %s', method, url);\n            _a = {\n              id: uuid_1.uuidv4(),\n              url: new URL(url, location.origin),\n              method: method,\n              headers: new headers_utils_1.Headers((init === null || init === void 0 ? void 0 : init.headers) || {})\n            };\n            return [4\n            /*yield*/\n            , ref.text()];\n\n          case 1:\n            isoRequest = (_a.body = _b.sent(), _a);\n            debug('isomorphic request', isoRequest);\n            observer.emit('request', isoRequest);\n            debug('awaiting for the mocked response...');\n            return [4\n            /*yield*/\n            , resolver(isoRequest, ref)];\n\n          case 2:\n            response = _b.sent();\n            debug('mocked response', response);\n\n            if (response) {\n              isomorphicResponse = toIsoResponse_1.toIsoResponse(response);\n              debug('derived isomorphic response', isomorphicResponse);\n              observer.emit('response', isoRequest, isomorphicResponse);\n              return [2\n              /*return*/\n              , new Response(response.body, __assign(__assign({}, isomorphicResponse), {\n                // `Response.headers` cannot be instantiated with the `Headers` polyfill.\n                // Apparently, it halts if the `Headers` class contains unknown properties\n                // (i.e. the internal `Headers.map`).\n                headers: headers_utils_1.flattenHeadersObject(response.headers || {})\n              }))];\n            }\n\n            debug('no mocked response found, bypassing...');\n            return [2\n            /*return*/\n            , pureFetch(input, init).then(function (response) {\n              return __awaiter(void 0, void 0, void 0, function () {\n                var cloneResponse, _a, _b, _c;\n\n                return __generator(this, function (_d) {\n                  switch (_d.label) {\n                    case 0:\n                      cloneResponse = response.clone();\n                      debug('original fetch performed', cloneResponse);\n                      _b = (_a = observer).emit;\n                      _c = ['response', isoRequest];\n                      return [4\n                      /*yield*/\n                      , normalizeFetchResponse(cloneResponse)];\n\n                    case 1:\n                      _b.apply(_a, _c.concat([_d.sent()]));\n\n                      return [2\n                      /*return*/\n                      , response];\n                  }\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n\n  return function () {\n    debug('restoring modules...');\n    window.fetch = pureFetch;\n  };\n};\n\nexports.interceptFetch = interceptFetch;\n\nfunction normalizeFetchResponse(response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _a = {\n            status: response.status,\n            statusText: response.statusText,\n            headers: headers_utils_1.objectToHeaders(headers_utils_1.headersToObject(response.headers))\n          };\n          return [4\n          /*yield*/\n          , response.text()];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.body = _b.sent(), _a)];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/interceptors/fetch/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.interceptFetch = void 0;\nvar headers_utils_1 = require(\"headers-utils\");\nvar toIsoResponse_1 = require(\"../../utils/toIsoResponse\");\nvar uuid_1 = require(\"../../utils/uuid\");\nvar debug = require('debug')('fetch');\nvar interceptFetch = function (observer, resolver) {\n    var pureFetch = window.fetch;\n    debug('replacing \"window.fetch\"...');\n    window.fetch = function (input, init) { return __awaiter(void 0, void 0, void 0, function () {\n        var ref, url, method, isoRequest, response, isomorphicResponse;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    ref = new Request(input, init);\n                    url = typeof input === 'string' ? input : input.url;\n                    method = (init === null || init === void 0 ? void 0 : init.method) || 'GET';\n                    debug('[%s] %s', method, url);\n                    _a = {\n                        id: uuid_1.uuidv4(),\n                        url: new URL(url, location.origin),\n                        method: method,\n                        headers: new headers_utils_1.Headers((init === null || init === void 0 ? void 0 : init.headers) || {})\n                    };\n                    return [4 /*yield*/, ref.text()];\n                case 1:\n                    isoRequest = (_a.body = _b.sent(),\n                        _a);\n                    debug('isomorphic request', isoRequest);\n                    observer.emit('request', isoRequest);\n                    debug('awaiting for the mocked response...');\n                    return [4 /*yield*/, resolver(isoRequest, ref)];\n                case 2:\n                    response = _b.sent();\n                    debug('mocked response', response);\n                    if (response) {\n                        isomorphicResponse = toIsoResponse_1.toIsoResponse(response);\n                        debug('derived isomorphic response', isomorphicResponse);\n                        observer.emit('response', isoRequest, isomorphicResponse);\n                        return [2 /*return*/, new Response(response.body, __assign(__assign({}, isomorphicResponse), { \n                                // `Response.headers` cannot be instantiated with the `Headers` polyfill.\n                                // Apparently, it halts if the `Headers` class contains unknown properties\n                                // (i.e. the internal `Headers.map`).\n                                headers: headers_utils_1.flattenHeadersObject(response.headers || {}) }))];\n                    }\n                    debug('no mocked response found, bypassing...');\n                    return [2 /*return*/, pureFetch(input, init).then(function (response) { return __awaiter(void 0, void 0, void 0, function () {\n                            var cloneResponse, _a, _b, _c;\n                            return __generator(this, function (_d) {\n                                switch (_d.label) {\n                                    case 0:\n                                        cloneResponse = response.clone();\n                                        debug('original fetch performed', cloneResponse);\n                                        _b = (_a = observer).emit;\n                                        _c = ['response',\n                                            isoRequest];\n                                        return [4 /*yield*/, normalizeFetchResponse(cloneResponse)];\n                                    case 1:\n                                        _b.apply(_a, _c.concat([_d.sent()]));\n                                        return [2 /*return*/, response];\n                                }\n                            });\n                        }); })];\n            }\n        });\n    }); };\n    return function () {\n        debug('restoring modules...');\n        window.fetch = pureFetch;\n    };\n};\nexports.interceptFetch = interceptFetch;\nfunction normalizeFetchResponse(response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = {\n                        status: response.status,\n                        statusText: response.statusText,\n                        headers: headers_utils_1.objectToHeaders(headers_utils_1.headersToObject(response.headers))\n                    };\n                    return [4 /*yield*/, response.text()];\n                case 1: return [2 /*return*/, (_a.body = _b.sent(),\n                        _a)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}