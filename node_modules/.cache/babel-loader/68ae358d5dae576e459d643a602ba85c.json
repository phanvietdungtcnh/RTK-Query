{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Practice_ReactJS\\\\RTK_Query\\\\src\\\\features\\\\album\\\\AlbumList.js\",\n    _s = $RefreshSig$();\n\nimport { Spinner } from '../../components/Spinner';\nimport React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAlbumsQuery } from '../api/apiSlice';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet AlbumExcerpt = _ref => {\n  let {\n    album\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-excerpt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: album.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/album/${album.id}`,\n      className: \"button muted-button\",\n      children: \"View Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, album.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AlbumExcerpt;\nAlbumExcerpt = /*#__PURE__*/React.memo(AlbumExcerpt);\nexport const AlbumList = () => {\n  _s();\n\n  const {\n    data: album = [],\n    isFetching,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetAlbumsQuery();\n  const sortedAlbum = useMemo(() => {\n    const sortedAlbum = album.slice();\n    return sortedAlbum;\n  }, [album]);\n  let body;\n\n  if (isLoading) {\n    body = /*#__PURE__*/_jsxDEV(Spinner, {\n      text: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  } else if (isSuccess) {\n    const renderedAlbum = sortedAlbum.map(album => /*#__PURE__*/_jsxDEV(AlbumExcerpt, {\n      album: album\n    }, album.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this));\n    const containerClassname = classnames('posts-container', {\n      disabled: isFetching\n    });\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerClassname,\n      children: renderedAlbum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else if (isError) {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"posts-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"link-label\",\n      children: \"Albums List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), body]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumList, \"4QHvvGP5uxuboyb9Ogl/rIyjyzk=\", false, function () {\n  return [useGetAlbumsQuery];\n});\n\n_c2 = AlbumList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlbumExcerpt\");\n$RefreshReg$(_c2, \"AlbumList\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/src/features/album/AlbumList.js"],"names":["Spinner","React","useMemo","Link","useGetAlbumsQuery","classnames","AlbumExcerpt","album","title","id","memo","AlbumList","data","isFetching","isLoading","isSuccess","isError","error","sortedAlbum","slice","body","renderedAlbum","map","containerClassname","disabled"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;;AAGA,IAAIC,YAAY,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAChC,sBACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASD,KAAK,CAACE,EAAG,EAA7B;AAAgC,MAAA,SAAS,EAAC,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAAuCF,KAAK,CAACE,EAA7C;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAIH,Y;AAWJA,YAAY,gBAAGL,KAAK,CAACS,IAAN,CAAWJ,YAAX,CAAf;AAEA,OAAO,MAAMK,SAAS,GAAG,MAAM;AAAA;;AAE7B,QAAM;AACJC,IAAAA,IAAI,EAAEL,KAAK,GAAG,EADV;AAEJM,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFb,iBAAiB,EAPrB;AASA,QAAMc,WAAW,GAAGhB,OAAO,CAAC,MAAM;AAChC,UAAMgB,WAAW,GAAGX,KAAK,CAACY,KAAN,EAApB;AAEA,WAAOD,WAAP;AACD,GAJ0B,EAIxB,CAACX,KAAD,CAJwB,CAA3B;AAMA,MAAIa,IAAJ;;AAEA,MAAIN,SAAJ,EAAe;AACbM,IAAAA,IAAI,gBAAG,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIL,SAAJ,EAAe;AACpB,UAAMM,aAAa,GAAGH,WAAW,CAACI,GAAZ,CAAgBf,KAAK,iBACzC,QAAC,YAAD;AAA6B,MAAA,KAAK,EAAEA;AAApC,OAAmBA,KAAK,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA,YADoB,CAAtB;AAIA,UAAMc,kBAAkB,GAAGlB,UAAU,CAAC,iBAAD,EAAoB;AACvDmB,MAAAA,QAAQ,EAAEX;AAD6C,KAApB,CAArC;AAIAO,IAAAA,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAEG,kBAAhB;AAAA,gBAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAVM,MAUA,IAAIL,OAAJ,EAAa;AAClBI,IAAAA,IAAI,gBAAG;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzCM;;GAAMT,S;UASPP,iB;;;MATOO,S","sourcesContent":["import { Spinner } from '../../components/Spinner'\r\nimport React, { useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useGetAlbumsQuery } from '../api/apiSlice'\r\n\r\nimport classnames from 'classnames'\r\n\r\n\r\nlet AlbumExcerpt = ({ album }) => {\r\n  return (\r\n    <article className=\"post-excerpt\" key={album.id}>\r\n      <h3>{album.title}</h3>\r\n\r\n      <Link to={`/album/${album.id}`} className=\"button muted-button\">\r\n        View Album\r\n      </Link>\r\n    </article>\r\n  )\r\n}\r\nAlbumExcerpt = React.memo(AlbumExcerpt)\r\n\r\nexport const AlbumList = () => {\r\n\r\n  const {\r\n    data: album = [],\r\n    isFetching,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n  } = useGetAlbumsQuery()\r\n\r\n  const sortedAlbum = useMemo(() => {\r\n    const sortedAlbum = album.slice()\r\n\r\n    return sortedAlbum\r\n  }, [album])\r\n\r\n  let body\r\n\r\n  if (isLoading) {\r\n    body = <Spinner text=\"Loading...\" />\r\n  } else if (isSuccess) {\r\n    const renderedAlbum = sortedAlbum.map(album => (\r\n      <AlbumExcerpt key={album.id} album={album} />\r\n    ))\r\n\r\n    const containerClassname = classnames('posts-container', {\r\n      disabled: isFetching\r\n    })\r\n\r\n    body = <div className={containerClassname}>{renderedAlbum}</div>\r\n  } else if (isError) {\r\n    body = <div>{error}</div>\r\n  }\r\n\r\n  return (\r\n    <section className=\"posts-list\">\r\n      <h2 className=\"link-label\">Albums List</h2>\r\n      {body}\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}