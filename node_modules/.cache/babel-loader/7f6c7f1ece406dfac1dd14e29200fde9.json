{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\nexports.updateEntity = void 0;\n\nvar debug_1 = require(\"debug\");\n\nvar get_1 = __importDefault(require(\"lodash/get\"));\n\nvar set_1 = __importDefault(require(\"lodash/set\"));\n\nvar outvariant_1 = require(\"outvariant\");\n\nvar Relation_1 = require(\"../relations/Relation\");\n\nvar glossary_1 = require(\"../glossary\");\n\nvar isObject_1 = require(\"../utils/isObject\");\n\nvar inheritInternalProperties_1 = require(\"../utils/inheritInternalProperties\");\n\nvar nullable_1 = require(\"../nullable\");\n\nvar spread_1 = require(\"../utils/spread\");\n\nvar log = debug_1.debug('updateEntity');\n/**\n * Update an entity with the given next data.\n */\n\nfunction updateEntity(entity, data, definition) {\n  log('updating entity:\\n%j\\nwith data:\\n%j', entity, data);\n  log('model definition:', definition);\n  var nextEntity = spread_1.spread(entity);\n  inheritInternalProperties_1.inheritInternalProperties(nextEntity, entity);\n\n  var updateRecursively = function (data, parentPath) {\n    var e_1, _a;\n\n    if (parentPath === void 0) {\n      parentPath = [];\n    }\n\n    log('updating path \"%s\" to:', parentPath, data);\n\n    var _loop_1 = function (propertyName, value) {\n      var propertyPath = parentPath.concat(propertyName);\n      var prevValue = get_1[\"default\"](nextEntity, propertyPath);\n      log('previous value for \"%s\":', propertyPath, prevValue);\n      var nextValue = typeof value === 'function' ? value(prevValue, entity) : value;\n      log('next value for \"%s\":', propertyPath, nextValue);\n      var propertyDefinition = get_1[\"default\"](definition, propertyPath);\n      log('property definition for \"%s\":', propertyPath, propertyDefinition);\n\n      if (propertyDefinition == null) {\n        log('skipping an unknown property \"%s\" on \"%s\"...', propertyName, entity[glossary_1.ENTITY_TYPE]);\n        return \"continue\";\n      }\n\n      if (propertyDefinition instanceof Relation_1.Relation) {\n        log('property \"%s\" is a \"%s\" relationship to \"%s\"', propertyPath, propertyDefinition.kind, propertyDefinition.target.modelName);\n        var location_1 = nextEntity[glossary_1.ENTITY_TYPE] + \".\" + propertyPath.join('.');\n\n        if (nextValue == null) {\n          // Forbid updating a non-nullable relationship to null.\n          outvariant_1.invariant(propertyDefinition.attributes.nullable, 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): cannot update a non-nullable relationship to null.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]]);\n          log('re-defining the \"%s\" relationship on \"%s\" to: null', propertyName, nextEntity[glossary_1.ENTITY_TYPE]);\n          propertyDefinition.resolveWith(nextEntity, null);\n          return \"continue\";\n        }\n\n        if (propertyDefinition.kind === Relation_1.RelationKind.ManyOf) {\n          // Forbid updating a \"MANY_OF\" relation to a non-array value.\n          outvariant_1.invariant(Array.isArray(nextValue), 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value to be an array of entities but got %j.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], nextValue);\n          nextValue.forEach(function (ref, index) {\n            // Forbid providing a compatible plain object in any array members.\n            outvariant_1.invariant(ref[glossary_1.ENTITY_TYPE], 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value at index %d to be an entity but got %j.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], index, ref); // Forbid referencing a different model in any array members.\n\n            outvariant_1.invariant(ref[glossary_1.ENTITY_TYPE] === propertyDefinition.target.modelName, 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value at index %d to reference a \"%s\" but got \"%s\".', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], index, propertyDefinition.target.modelName, ref[glossary_1.ENTITY_TYPE]);\n          });\n          propertyDefinition.resolveWith(nextEntity, nextValue);\n          return \"continue\";\n        } // Forbid updating a relationship with a compatible plain object.\n\n\n        outvariant_1.invariant(nextValue[glossary_1.ENTITY_TYPE], 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value to be an entity but got %j.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], nextValue); // Forbid updating a relationship to an entity of a different model.\n\n        outvariant_1.invariant(nextValue[glossary_1.ENTITY_TYPE] == propertyDefinition.target.modelName, 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value to reference a \"%s\" but got \"%s\" (%s: \"%s\").', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], propertyDefinition.target.modelName, nextValue[glossary_1.ENTITY_TYPE], nextValue[glossary_1.PRIMARY_KEY], nextValue[nextValue[glossary_1.PRIMARY_KEY]]); // Re-define the relationship only if its next value references a different entity\n        // than before. That means a new compatible entity was created as the next value.\n\n        if ((prevValue === null || prevValue === void 0 ? void 0 : prevValue[prevValue === null || prevValue === void 0 ? void 0 : prevValue[glossary_1.PRIMARY_KEY]]) !== nextValue[nextValue[glossary_1.PRIMARY_KEY]]) {\n          log('next referenced \"%s\" (%s: \"%s\") differs from the previous (%s: \"%s\"), re-defining the relationship...', propertyDefinition.target.modelName, nextValue[glossary_1.PRIMARY_KEY]);\n          propertyDefinition.resolveWith(nextEntity, nextValue);\n        }\n\n        return \"continue\";\n      } // Support updating nested objects.\n\n\n      if (isObject_1.isObject(nextValue)) {\n        log('next value at \"%s\" is an object: %j, recursively updating...', propertyPath, nextValue);\n        updateRecursively(nextValue, propertyPath);\n        return \"continue\";\n      }\n\n      outvariant_1.invariant(nextValue !== null || propertyDefinition instanceof nullable_1.NullableProperty, 'Failed to update \"%s\" on \"%s\": cannot set a non-nullable property to null.', propertyName, entity[glossary_1.ENTITY_TYPE]);\n      log('updating a plain property \"%s\" to:', propertyPath, nextValue);\n      set_1[\"default\"](nextEntity, propertyPath, nextValue);\n    };\n\n    try {\n      for (var _b = __values(Object.entries(data)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            propertyName = _d[0],\n            value = _d[1];\n\n        _loop_1(propertyName, value);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  updateRecursively(data);\n  log('successfully updated to:', nextEntity);\n  return nextEntity;\n}\n\nexports.updateEntity = updateEntity;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/node_modules/@mswjs/data/lib/model/updateEntity.js"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","__importDefault","mod","__esModule","exports","updateEntity","debug_1","require","get_1","set_1","outvariant_1","Relation_1","glossary_1","isObject_1","inheritInternalProperties_1","nullable_1","spread_1","log","debug","entity","data","definition","nextEntity","spread","inheritInternalProperties","updateRecursively","parentPath","e_1","_a","_loop_1","propertyName","propertyPath","concat","prevValue","nextValue","propertyDefinition","ENTITY_TYPE","Relation","kind","target","modelName","location_1","join","invariant","attributes","nullable","PRIMARY_KEY","resolveWith","RelationKind","ManyOf","Array","isArray","forEach","ref","index","isObject","NullableProperty","_b","Object","entries","_c","_d","e_1_1"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.updateEntity = void 0;\nvar debug_1 = require(\"debug\");\nvar get_1 = __importDefault(require(\"lodash/get\"));\nvar set_1 = __importDefault(require(\"lodash/set\"));\nvar outvariant_1 = require(\"outvariant\");\nvar Relation_1 = require(\"../relations/Relation\");\nvar glossary_1 = require(\"../glossary\");\nvar isObject_1 = require(\"../utils/isObject\");\nvar inheritInternalProperties_1 = require(\"../utils/inheritInternalProperties\");\nvar nullable_1 = require(\"../nullable\");\nvar spread_1 = require(\"../utils/spread\");\nvar log = debug_1.debug('updateEntity');\n/**\n * Update an entity with the given next data.\n */\nfunction updateEntity(entity, data, definition) {\n    log('updating entity:\\n%j\\nwith data:\\n%j', entity, data);\n    log('model definition:', definition);\n    var nextEntity = spread_1.spread(entity);\n    inheritInternalProperties_1.inheritInternalProperties(nextEntity, entity);\n    var updateRecursively = function (data, parentPath) {\n        var e_1, _a;\n        if (parentPath === void 0) { parentPath = []; }\n        log('updating path \"%s\" to:', parentPath, data);\n        var _loop_1 = function (propertyName, value) {\n            var propertyPath = parentPath.concat(propertyName);\n            var prevValue = get_1[\"default\"](nextEntity, propertyPath);\n            log('previous value for \"%s\":', propertyPath, prevValue);\n            var nextValue = typeof value === 'function' ? value(prevValue, entity) : value;\n            log('next value for \"%s\":', propertyPath, nextValue);\n            var propertyDefinition = get_1[\"default\"](definition, propertyPath);\n            log('property definition for \"%s\":', propertyPath, propertyDefinition);\n            if (propertyDefinition == null) {\n                log('skipping an unknown property \"%s\" on \"%s\"...', propertyName, entity[glossary_1.ENTITY_TYPE]);\n                return \"continue\";\n            }\n            if (propertyDefinition instanceof Relation_1.Relation) {\n                log('property \"%s\" is a \"%s\" relationship to \"%s\"', propertyPath, propertyDefinition.kind, propertyDefinition.target.modelName);\n                var location_1 = nextEntity[glossary_1.ENTITY_TYPE] + \".\" + propertyPath.join('.');\n                if (nextValue == null) {\n                    // Forbid updating a non-nullable relationship to null.\n                    outvariant_1.invariant(propertyDefinition.attributes.nullable, 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): cannot update a non-nullable relationship to null.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]]);\n                    log('re-defining the \"%s\" relationship on \"%s\" to: null', propertyName, nextEntity[glossary_1.ENTITY_TYPE]);\n                    propertyDefinition.resolveWith(nextEntity, null);\n                    return \"continue\";\n                }\n                if (propertyDefinition.kind === Relation_1.RelationKind.ManyOf) {\n                    // Forbid updating a \"MANY_OF\" relation to a non-array value.\n                    outvariant_1.invariant(Array.isArray(nextValue), 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value to be an array of entities but got %j.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], nextValue);\n                    nextValue.forEach(function (ref, index) {\n                        // Forbid providing a compatible plain object in any array members.\n                        outvariant_1.invariant(ref[glossary_1.ENTITY_TYPE], 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value at index %d to be an entity but got %j.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], index, ref);\n                        // Forbid referencing a different model in any array members.\n                        outvariant_1.invariant(ref[glossary_1.ENTITY_TYPE] === propertyDefinition.target.modelName, 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value at index %d to reference a \"%s\" but got \"%s\".', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], index, propertyDefinition.target.modelName, ref[glossary_1.ENTITY_TYPE]);\n                    });\n                    propertyDefinition.resolveWith(nextEntity, nextValue);\n                    return \"continue\";\n                }\n                // Forbid updating a relationship with a compatible plain object.\n                outvariant_1.invariant(nextValue[glossary_1.ENTITY_TYPE], 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value to be an entity but got %j.', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], nextValue);\n                // Forbid updating a relationship to an entity of a different model.\n                outvariant_1.invariant(nextValue[glossary_1.ENTITY_TYPE] == propertyDefinition.target.modelName, 'Failed to update a \"%s\" relationship to \"%s\" at \"%s\" (%s: \"%s\"): expected the next value to reference a \"%s\" but got \"%s\" (%s: \"%s\").', propertyDefinition.kind, propertyDefinition.target.modelName, location_1, nextEntity[glossary_1.PRIMARY_KEY], nextEntity[nextEntity[glossary_1.PRIMARY_KEY]], propertyDefinition.target.modelName, nextValue[glossary_1.ENTITY_TYPE], nextValue[glossary_1.PRIMARY_KEY], nextValue[nextValue[glossary_1.PRIMARY_KEY]]);\n                // Re-define the relationship only if its next value references a different entity\n                // than before. That means a new compatible entity was created as the next value.\n                if ((prevValue === null || prevValue === void 0 ? void 0 : prevValue[prevValue === null || prevValue === void 0 ? void 0 : prevValue[glossary_1.PRIMARY_KEY]]) !==\n                    nextValue[nextValue[glossary_1.PRIMARY_KEY]]) {\n                    log('next referenced \"%s\" (%s: \"%s\") differs from the previous (%s: \"%s\"), re-defining the relationship...', propertyDefinition.target.modelName, nextValue[glossary_1.PRIMARY_KEY]);\n                    propertyDefinition.resolveWith(nextEntity, nextValue);\n                }\n                return \"continue\";\n            }\n            // Support updating nested objects.\n            if (isObject_1.isObject(nextValue)) {\n                log('next value at \"%s\" is an object: %j, recursively updating...', propertyPath, nextValue);\n                updateRecursively(nextValue, propertyPath);\n                return \"continue\";\n            }\n            outvariant_1.invariant(nextValue !== null || propertyDefinition instanceof nullable_1.NullableProperty, 'Failed to update \"%s\" on \"%s\": cannot set a non-nullable property to null.', propertyName, entity[glossary_1.ENTITY_TYPE]);\n            log('updating a plain property \"%s\" to:', propertyPath, nextValue);\n            set_1[\"default\"](nextEntity, propertyPath, nextValue);\n        };\n        try {\n            for (var _b = __values(Object.entries(data)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), propertyName = _d[0], value = _d[1];\n                _loop_1(propertyName, value);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    updateRecursively(data);\n    log('successfully updated to:', nextEntity);\n    return nextEntity;\n}\nexports.updateEntity = updateEntity;\n"]},"metadata":{},"sourceType":"script"}