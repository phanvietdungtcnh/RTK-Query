{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nexports.__esModule = true;\nexports.generateGraphQLHandlers = exports.generateGraphQLSchema = exports.definitionToFields = exports.getQueryTypeByValueType = exports.comparatorTypes = exports.getGraphQLType = void 0;\n\nvar pluralize_1 = __importDefault(require(\"pluralize\"));\n\nvar graphql_1 = require(\"graphql\");\n\nvar msw_1 = require(\"msw\");\n\nvar primaryKey_1 = require(\"../primaryKey\");\n\nvar capitalize_1 = require(\"../utils/capitalize\");\n\nvar boolean_1 = require(\"../comparators/boolean\");\n\nvar string_1 = require(\"../comparators/string\");\n\nvar number_1 = require(\"../comparators/number\");\n/**\n * Derive a GraphQL scalar type from a variable.\n */\n\n\nfunction getGraphQLType(value) {\n  var resolvedValue = typeof value === 'function' ? value() : value;\n\n  switch (resolvedValue.constructor.name) {\n    case 'Number':\n      return graphql_1.GraphQLInt;\n\n    case 'Boolean':\n      return graphql_1.GraphQLBoolean;\n\n    default:\n      return graphql_1.GraphQLString;\n  }\n}\n\nexports.getGraphQLType = getGraphQLType;\n/**\n * Create a GraphQLInputObjectType from a given comparator function.\n */\n\nfunction createComparatorGraphQLInputType(name, comparators, type) {\n  return new graphql_1.GraphQLInputObjectType({\n    name: name,\n    fields: Object.keys(comparators).reduce(function (fields, comparatorFn) {\n      var fieldType = ['between', 'notBetween', 'in', 'notIn'].includes(comparatorFn) ? graphql_1.GraphQLList(type) : type;\n      fields[comparatorFn] = {\n        type: fieldType\n      };\n      return fields;\n    }, {})\n  });\n}\n\nexports.comparatorTypes = {\n  IdQueryType: createComparatorGraphQLInputType('IdQueryType', string_1.stringComparators, graphql_1.GraphQLID),\n  StringQueryType: createComparatorGraphQLInputType('StringQueryType', string_1.stringComparators, graphql_1.GraphQLString),\n  IntQueryType: createComparatorGraphQLInputType('IntQueryType', number_1.numberComparators, graphql_1.GraphQLInt),\n  BooleanQueryType: createComparatorGraphQLInputType('BooleanQueryType', boolean_1.booleanComparators, graphql_1.GraphQLBoolean)\n};\n\nfunction getQueryTypeByValueType(valueType) {\n  switch (valueType.name) {\n    case 'ID':\n      return exports.comparatorTypes.IdQueryType;\n\n    case 'Int':\n      return exports.comparatorTypes.IntQueryType;\n\n    case 'Boolean':\n      return exports.comparatorTypes.BooleanQueryType;\n\n    default:\n      return exports.comparatorTypes.StringQueryType;\n  }\n}\n\nexports.getQueryTypeByValueType = getQueryTypeByValueType;\n\nfunction definitionToFields(definition) {\n  return Object.entries(definition).reduce(function (types, _a) {\n    var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n\n    var valueType = value instanceof primaryKey_1.PrimaryKey ? graphql_1.GraphQLID : getGraphQLType(value);\n    var queryType = getQueryTypeByValueType(valueType); // Fields describe an entity type.\n\n    types.fields[key] = {\n      type: valueType\n    }; // Input fields describe a type that can be used\n    // as an input when creating entities (initial values).\n\n    types.inputFields[key] = {\n      type: valueType\n    }; // Query input fields describe a type that is used\n    // as a \"where\" query, with its comparator function types.\n\n    types.queryInputFields[key] = {\n      type: queryType\n    };\n    return types;\n  }, {\n    fields: {},\n    inputFields: {},\n    queryInputFields: {}\n  });\n}\n\nexports.definitionToFields = definitionToFields;\n\nfunction generateGraphQLSchema(modelName, definition, model) {\n  var _a, _b;\n\n  var pluralModelName = pluralize_1[\"default\"](modelName);\n  var capitalModelName = capitalize_1.capitalize(modelName);\n\n  var _c = definitionToFields(definition),\n      fields = _c.fields,\n      inputFields = _c.inputFields,\n      queryInputFields = _c.queryInputFields;\n\n  var EntityType = new graphql_1.GraphQLObjectType({\n    name: capitalModelName,\n    fields: fields\n  });\n  var EntityInputType = new graphql_1.GraphQLInputObjectType({\n    name: capitalModelName + \"Input\",\n    fields: inputFields\n  });\n  var EntityQueryInputType = new graphql_1.GraphQLInputObjectType({\n    name: capitalModelName + \"QueryInput\",\n    fields: queryInputFields\n  });\n  var paginationArgs = {\n    take: {\n      type: graphql_1.GraphQLInt\n    },\n    skip: {\n      type: graphql_1.GraphQLInt\n    },\n    cursor: {\n      type: graphql_1.GraphQLID\n    }\n  };\n  var objectSchema = new graphql_1.GraphQLSchema({\n    query: new graphql_1.GraphQLObjectType({\n      name: 'Query',\n      fields: (_a = {}, // Get an entity by the primary key.\n      _a[modelName] = {\n        type: EntityType,\n        args: {\n          where: {\n            type: EntityQueryInputType\n          }\n        },\n        resolve: function (_, args) {\n          return model.findFirst({\n            where: args.where\n          });\n        }\n      }, // Get all entities.\n      _a[pluralModelName] = {\n        type: new graphql_1.GraphQLList(EntityType),\n        args: __assign(__assign({}, paginationArgs), {\n          where: {\n            type: EntityQueryInputType\n          }\n        }),\n        resolve: function (_, args) {\n          var shouldQuery = Object.keys(args).length > 0;\n          return shouldQuery ? model.findMany({\n            where: args.where,\n            skip: args.skip,\n            take: args.take,\n            cursor: args.cursor\n          }) : model.getAll();\n        }\n      }, _a)\n    }),\n    mutation: new graphql_1.GraphQLObjectType({\n      name: 'Mutation',\n      fields: (_b = {}, // Create a new entity.\n      _b[\"create\" + capitalModelName] = {\n        type: EntityType,\n        args: {\n          data: {\n            type: EntityInputType\n          }\n        },\n        resolve: function (_, args) {\n          return model.create(args.data);\n        }\n      }, // Update an single entity.\n      _b[\"update\" + capitalModelName] = {\n        type: EntityType,\n        args: {\n          where: {\n            type: EntityQueryInputType\n          },\n          data: {\n            type: EntityInputType\n          }\n        },\n        resolve: function (_, args) {\n          return model.update({\n            where: args.where,\n            data: args.data\n          });\n        }\n      }, // Update multiple existing entities.\n      _b[\"update\" + capitalize_1.capitalize(pluralModelName)] = {\n        type: new graphql_1.GraphQLList(EntityType),\n        args: {\n          where: {\n            type: EntityQueryInputType\n          },\n          data: {\n            type: EntityInputType\n          }\n        },\n        resolve: function (_, args) {\n          return model.updateMany({\n            where: args.where,\n            data: args.data\n          });\n        }\n      }, // Delete a single entity.\n      _b[\"delete\" + capitalModelName] = {\n        type: EntityType,\n        args: {\n          where: {\n            type: EntityQueryInputType\n          }\n        },\n        resolve: function (_, args) {\n          return model[\"delete\"]({\n            where: args.where\n          });\n        }\n      }, // Delete multiple entities.\n      _b[\"delete\" + capitalize_1.capitalize(pluralModelName)] = {\n        type: new graphql_1.GraphQLList(EntityType),\n        args: {\n          where: {\n            type: EntityQueryInputType\n          }\n        },\n        resolve: function (_, args) {\n          return model.deleteMany({\n            where: args.where\n          });\n        }\n      }, _b)\n    })\n  });\n  return objectSchema;\n}\n\nexports.generateGraphQLSchema = generateGraphQLSchema;\n\nfunction generateGraphQLHandlers(modelName, definition, model, baseUrl) {\n  var _this = this;\n\n  if (baseUrl === void 0) {\n    baseUrl = '';\n  }\n\n  var target = baseUrl ? msw_1.graphql.link(baseUrl) : msw_1.graphql;\n  var objectSchema = generateGraphQLSchema(modelName, definition, model);\n  return [target.operation(function (req, res, ctx) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var result;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!req.body) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , graphql_1.graphql({\n              schema: objectSchema,\n              source: (_a = req.body) === null || _a === void 0 ? void 0 : _a.query,\n              variableValues: req.variables\n            })];\n\n          case 1:\n            result = _b.sent();\n            return [2\n            /*return*/\n            , res(ctx.data(result.data), ctx.errors(result.errors))];\n        }\n      });\n    });\n  })];\n}\n\nexports.generateGraphQLHandlers = generateGraphQLHandlers;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Nodric/finnal/node_modules/@mswjs/data/lib/model/generateGraphQLHandlers.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__importDefault","mod","__esModule","exports","generateGraphQLHandlers","generateGraphQLSchema","definitionToFields","getQueryTypeByValueType","comparatorTypes","getGraphQLType","pluralize_1","require","graphql_1","msw_1","primaryKey_1","capitalize_1","boolean_1","string_1","number_1","resolvedValue","constructor","name","GraphQLInt","GraphQLBoolean","GraphQLString","createComparatorGraphQLInputType","comparators","type","GraphQLInputObjectType","fields","keys","reduce","comparatorFn","fieldType","includes","GraphQLList","IdQueryType","stringComparators","GraphQLID","StringQueryType","IntQueryType","numberComparators","BooleanQueryType","booleanComparators","valueType","definition","entries","types","_a","_b","key","PrimaryKey","queryType","inputFields","queryInputFields","modelName","model","pluralModelName","capitalModelName","capitalize","_c","EntityType","GraphQLObjectType","EntityInputType","EntityQueryInputType","paginationArgs","take","skip","cursor","objectSchema","GraphQLSchema","query","args","where","findFirst","shouldQuery","findMany","getAll","mutation","data","create","update","updateMany","deleteMany","baseUrl","_this","target","graphql","link","operation","req","res","ctx","schema","source","variableValues","variables","errors"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.generateGraphQLHandlers = exports.generateGraphQLSchema = exports.definitionToFields = exports.getQueryTypeByValueType = exports.comparatorTypes = exports.getGraphQLType = void 0;\nvar pluralize_1 = __importDefault(require(\"pluralize\"));\nvar graphql_1 = require(\"graphql\");\nvar msw_1 = require(\"msw\");\nvar primaryKey_1 = require(\"../primaryKey\");\nvar capitalize_1 = require(\"../utils/capitalize\");\nvar boolean_1 = require(\"../comparators/boolean\");\nvar string_1 = require(\"../comparators/string\");\nvar number_1 = require(\"../comparators/number\");\n/**\n * Derive a GraphQL scalar type from a variable.\n */\nfunction getGraphQLType(value) {\n    var resolvedValue = typeof value === 'function' ? value() : value;\n    switch (resolvedValue.constructor.name) {\n        case 'Number':\n            return graphql_1.GraphQLInt;\n        case 'Boolean':\n            return graphql_1.GraphQLBoolean;\n        default:\n            return graphql_1.GraphQLString;\n    }\n}\nexports.getGraphQLType = getGraphQLType;\n/**\n * Create a GraphQLInputObjectType from a given comparator function.\n */\nfunction createComparatorGraphQLInputType(name, comparators, type) {\n    return new graphql_1.GraphQLInputObjectType({\n        name: name,\n        fields: Object.keys(comparators).reduce(function (fields, comparatorFn) {\n            var fieldType = ['between', 'notBetween', 'in', 'notIn'].includes(comparatorFn) ? graphql_1.GraphQLList(type) : type;\n            fields[comparatorFn] = { type: fieldType };\n            return fields;\n        }, {})\n    });\n}\nexports.comparatorTypes = {\n    IdQueryType: createComparatorGraphQLInputType('IdQueryType', string_1.stringComparators, graphql_1.GraphQLID),\n    StringQueryType: createComparatorGraphQLInputType('StringQueryType', string_1.stringComparators, graphql_1.GraphQLString),\n    IntQueryType: createComparatorGraphQLInputType('IntQueryType', number_1.numberComparators, graphql_1.GraphQLInt),\n    BooleanQueryType: createComparatorGraphQLInputType('BooleanQueryType', boolean_1.booleanComparators, graphql_1.GraphQLBoolean)\n};\nfunction getQueryTypeByValueType(valueType) {\n    switch (valueType.name) {\n        case 'ID':\n            return exports.comparatorTypes.IdQueryType;\n        case 'Int':\n            return exports.comparatorTypes.IntQueryType;\n        case 'Boolean':\n            return exports.comparatorTypes.BooleanQueryType;\n        default:\n            return exports.comparatorTypes.StringQueryType;\n    }\n}\nexports.getQueryTypeByValueType = getQueryTypeByValueType;\nfunction definitionToFields(definition) {\n    return Object.entries(definition).reduce(function (types, _a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        var valueType = value instanceof primaryKey_1.PrimaryKey ? graphql_1.GraphQLID : getGraphQLType(value);\n        var queryType = getQueryTypeByValueType(valueType);\n        // Fields describe an entity type.\n        types.fields[key] = { type: valueType };\n        // Input fields describe a type that can be used\n        // as an input when creating entities (initial values).\n        types.inputFields[key] = { type: valueType };\n        // Query input fields describe a type that is used\n        // as a \"where\" query, with its comparator function types.\n        types.queryInputFields[key] = { type: queryType };\n        return types;\n    }, {\n        fields: {},\n        inputFields: {},\n        queryInputFields: {}\n    });\n}\nexports.definitionToFields = definitionToFields;\nfunction generateGraphQLSchema(modelName, definition, model) {\n    var _a, _b;\n    var pluralModelName = pluralize_1[\"default\"](modelName);\n    var capitalModelName = capitalize_1.capitalize(modelName);\n    var _c = definitionToFields(definition), fields = _c.fields, inputFields = _c.inputFields, queryInputFields = _c.queryInputFields;\n    var EntityType = new graphql_1.GraphQLObjectType({\n        name: capitalModelName,\n        fields: fields\n    });\n    var EntityInputType = new graphql_1.GraphQLInputObjectType({\n        name: capitalModelName + \"Input\",\n        fields: inputFields\n    });\n    var EntityQueryInputType = new graphql_1.GraphQLInputObjectType({\n        name: capitalModelName + \"QueryInput\",\n        fields: queryInputFields\n    });\n    var paginationArgs = {\n        take: { type: graphql_1.GraphQLInt },\n        skip: { type: graphql_1.GraphQLInt },\n        cursor: { type: graphql_1.GraphQLID }\n    };\n    var objectSchema = new graphql_1.GraphQLSchema({\n        query: new graphql_1.GraphQLObjectType({\n            name: 'Query',\n            fields: (_a = {},\n                // Get an entity by the primary key.\n                _a[modelName] = {\n                    type: EntityType,\n                    args: {\n                        where: { type: EntityQueryInputType }\n                    },\n                    resolve: function (_, args) {\n                        return model.findFirst({ where: args.where });\n                    }\n                },\n                // Get all entities.\n                _a[pluralModelName] = {\n                    type: new graphql_1.GraphQLList(EntityType),\n                    args: __assign(__assign({}, paginationArgs), { where: { type: EntityQueryInputType } }),\n                    resolve: function (_, args) {\n                        var shouldQuery = Object.keys(args).length > 0;\n                        return shouldQuery\n                            ? model.findMany({\n                                where: args.where,\n                                skip: args.skip,\n                                take: args.take,\n                                cursor: args.cursor\n                            })\n                            : model.getAll();\n                    }\n                },\n                _a)\n        }),\n        mutation: new graphql_1.GraphQLObjectType({\n            name: 'Mutation',\n            fields: (_b = {},\n                // Create a new entity.\n                _b[\"create\" + capitalModelName] = {\n                    type: EntityType,\n                    args: {\n                        data: { type: EntityInputType }\n                    },\n                    resolve: function (_, args) {\n                        return model.create(args.data);\n                    }\n                },\n                // Update an single entity.\n                _b[\"update\" + capitalModelName] = {\n                    type: EntityType,\n                    args: {\n                        where: { type: EntityQueryInputType },\n                        data: { type: EntityInputType }\n                    },\n                    resolve: function (_, args) {\n                        return model.update({\n                            where: args.where,\n                            data: args.data\n                        });\n                    }\n                },\n                // Update multiple existing entities.\n                _b[\"update\" + capitalize_1.capitalize(pluralModelName)] = {\n                    type: new graphql_1.GraphQLList(EntityType),\n                    args: {\n                        where: { type: EntityQueryInputType },\n                        data: { type: EntityInputType }\n                    },\n                    resolve: function (_, args) {\n                        return model.updateMany({\n                            where: args.where,\n                            data: args.data\n                        });\n                    }\n                },\n                // Delete a single entity.\n                _b[\"delete\" + capitalModelName] = {\n                    type: EntityType,\n                    args: {\n                        where: { type: EntityQueryInputType }\n                    },\n                    resolve: function (_, args) {\n                        return model[\"delete\"]({ where: args.where });\n                    }\n                },\n                // Delete multiple entities.\n                _b[\"delete\" + capitalize_1.capitalize(pluralModelName)] = {\n                    type: new graphql_1.GraphQLList(EntityType),\n                    args: {\n                        where: { type: EntityQueryInputType }\n                    },\n                    resolve: function (_, args) {\n                        return model.deleteMany({ where: args.where });\n                    }\n                },\n                _b)\n        })\n    });\n    return objectSchema;\n}\nexports.generateGraphQLSchema = generateGraphQLSchema;\nfunction generateGraphQLHandlers(modelName, definition, model, baseUrl) {\n    var _this = this;\n    if (baseUrl === void 0) { baseUrl = ''; }\n    var target = baseUrl ? msw_1.graphql.link(baseUrl) : msw_1.graphql;\n    var objectSchema = generateGraphQLSchema(modelName, definition, model);\n    return [\n        target.operation(function (req, res, ctx) { return __awaiter(_this, void 0, void 0, function () {\n            var result;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!req.body) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, graphql_1.graphql({\n                                schema: objectSchema,\n                                source: (_a = req.body) === null || _a === void 0 ? void 0 : _a.query,\n                                variableValues: req.variables\n                            })];\n                    case 1:\n                        result = _b.sent();\n                        return [2 /*return*/, res(ctx.data(result.data), ctx.errors(result.errors))];\n                }\n            });\n        }); }),\n    ];\n}\nexports.generateGraphQLHandlers = generateGraphQLHandlers;\n"]},"metadata":{},"sourceType":"script"}