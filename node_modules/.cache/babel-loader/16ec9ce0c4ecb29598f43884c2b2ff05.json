{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Practice_ReactJS\\\\RTK_Query\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport { fetchUsers } from './features/users/usersSlice';\nimport { worker } from './api/server';\nimport { apiSlice } from './features/api/apiSlice';\nimport { extendedApiSlice } from './features/users/usersSlice'; // Wrap app rendering so we can wait for the mock API to initialize\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function start() {\n  // Start our mock API server\n  await worker.start({\n    onUnhandledRequest: 'bypass'\n  });\n  store.dispatch(extendedApiSlice.endpoints.getUsers.initiate());\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n}\n\nstart();","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/src/index.js"],"names":["React","ReactDOM","App","store","Provider","fetchUsers","worker","apiSlice","extendedApiSlice","start","onUnhandledRequest","dispatch","endpoints","getUsers","initiate","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,gBAAT,QAAiC,6BAAjC,C,CAEA;;;;AACA,eAAeC,KAAf,GAAuB;AACrB;AACA,QAAMH,MAAM,CAACG,KAAP,CAAa;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GAAb,CAAN;AAEAP,EAAAA,KAAK,CAACQ,QAAN,CAAeH,gBAAgB,CAACI,SAAjB,CAA2BC,QAA3B,CAAoCC,QAApC,EAAf;AAEAb,EAAAA,QAAQ,CAACc,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEZ,KAAjB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAMEa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQD;;AAEDR,KAAK","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { fetchUsers } from './features/users/usersSlice'\r\nimport { worker } from './api/server';\r\nimport { apiSlice } from './features/api/apiSlice'\r\nimport { extendedApiSlice } from './features/users/usersSlice'\r\n\r\n// Wrap app rendering so we can wait for the mock API to initialize\r\nasync function start() {\r\n  // Start our mock API server\r\n  await worker.start({ onUnhandledRequest: 'bypass' })\r\n  \r\n  store.dispatch(extendedApiSlice.endpoints.getUsers.initiate())\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  )\r\n}\r\n\r\nstart()\r\n"]},"metadata":{},"sourceType":"module"}