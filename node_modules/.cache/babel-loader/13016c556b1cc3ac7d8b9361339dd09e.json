{"ast":null,"code":"// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\nexport async function client(endpoint) {\n  let {\n    body,\n    ...customConfig\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: { ...headers,\n      ...customConfig.headers\n    }\n  };\n\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n\n  let data;\n\n  try {\n    const response = await window.fetch(endpoint, config);\n    data = await response.json();\n\n    if (response.ok) {\n      // Return a result object similar to Axios\n      return {\n        status: response.status,\n        data,\n        headers: response.headers,\n        url: response.url\n      };\n    }\n\n    throw new Error(response.statusText);\n  } catch (err) {\n    return Promise.reject(err.message ? err.message : data);\n  }\n}\n\nclient.get = function (endpoint) {\n  let customConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return client(endpoint, { ...customConfig,\n    method: 'GET'\n  });\n};\n\nclient.post = function (endpoint, body) {\n  let customConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return client(endpoint, { ...customConfig,\n    body\n  });\n};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Practice_ReactJS/RTK_Query/src/api/client.js"],"names":["client","endpoint","body","customConfig","headers","config","method","JSON","stringify","data","response","window","fetch","json","ok","status","url","Error","statusText","err","Promise","reject","message","get","post"],"mappings":"AAAA;AACA;AAEA,OAAO,eAAeA,MAAf,CAAsBC,QAAtB,EAAgE;AAAA,MAAhC;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAgC,uEAAJ,EAAI;AACrE,QAAMC,OAAO,GAAG;AAAE,oBAAgB;AAAlB,GAAhB;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAEJ,IAAI,GAAG,MAAH,GAAY,KADX;AAEb,OAAGC,YAFU;AAGbC,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEP,SAAGD,YAAY,CAACC;AAFT;AAHI,GAAf;;AASA,MAAIF,IAAJ,EAAU;AACRG,IAAAA,MAAM,CAACH,IAAP,GAAcK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAd;AACD;;AAED,MAAIO,IAAJ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaX,QAAb,EAAuBI,MAAvB,CAAvB;AACAI,IAAAA,IAAI,GAAG,MAAMC,QAAQ,CAACG,IAAT,EAAb;;AACA,QAAIH,QAAQ,CAACI,EAAb,EAAiB;AACf;AACA,aAAO;AACLC,QAAAA,MAAM,EAAEL,QAAQ,CAACK,MADZ;AAELN,QAAAA,IAFK;AAGLL,QAAAA,OAAO,EAAEM,QAAQ,CAACN,OAHb;AAILY,QAAAA,GAAG,EAAEN,QAAQ,CAACM;AAJT,OAAP;AAMD;;AACD,UAAM,IAAIC,KAAJ,CAAUP,QAAQ,CAACQ,UAAnB,CAAN;AACD,GAbD,CAaE,OAAOC,GAAP,EAAY;AACZ,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAG,CAACG,OAAJ,GAAcH,GAAG,CAACG,OAAlB,GAA4Bb,IAA3C,CAAP;AACD;AACF;;AAEDT,MAAM,CAACuB,GAAP,GAAa,UAAUtB,QAAV,EAAuC;AAAA,MAAnBE,YAAmB,uEAAJ,EAAI;AAClD,SAAOH,MAAM,CAACC,QAAD,EAAW,EAAE,GAAGE,YAAL;AAAmBG,IAAAA,MAAM,EAAE;AAA3B,GAAX,CAAb;AACD,CAFD;;AAIAN,MAAM,CAACwB,IAAP,GAAc,UAAUvB,QAAV,EAAoBC,IAApB,EAA6C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACzD,SAAOH,MAAM,CAACC,QAAD,EAAW,EAAE,GAAGE,YAAL;AAAmBD,IAAAA;AAAnB,GAAX,CAAb;AACD,CAFD","sourcesContent":["// A tiny wrapper around fetch(), borrowed from\r\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\r\n\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n  const headers = { 'Content-Type': 'application/json' }\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n    },\r\n  }\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body)\r\n  }\r\n\r\n  let data\r\n  try {\r\n    const response = await window.fetch(endpoint, config)\r\n    data = await response.json()\r\n    if (response.ok) {\r\n      // Return a result object similar to Axios\r\n      return {\r\n        status: response.status,\r\n        data,\r\n        headers: response.headers,\r\n        url: response.url,\r\n      }\r\n    }\r\n    throw new Error(response.statusText)\r\n  } catch (err) {\r\n    return Promise.reject(err.message ? err.message : data)\r\n  }\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, method: 'GET' })\r\n}\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, body })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}