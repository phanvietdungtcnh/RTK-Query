{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nexports.__esModule = true;\nexports.parseModelDefinition = void 0;\n\nvar debug_1 = require(\"debug\");\n\nvar outvariant_1 = require(\"outvariant\");\n\nvar primaryKey_1 = require(\"../primaryKey\");\n\nvar isObject_1 = require(\"../utils/isObject\");\n\nvar Relation_1 = require(\"../relations/Relation\");\n\nvar nullable_1 = require(\"../nullable\");\n\nvar log = debug_1.debug('parseModelDefinition');\n/**\n * Recursively parses a given model definition into properties and relations.\n */\n\nfunction deepParseModelDefinition(dictionary, modelName, definition, parentPath, result) {\n  var e_1, _a;\n\n  if (result === void 0) {\n    result = {\n      primaryKey: undefined,\n      properties: [],\n      relations: []\n    };\n  }\n\n  if (parentPath) {\n    log('parsing a nested model definition for \"%s\" property at \"%s\"', parentPath, modelName, definition);\n  }\n\n  try {\n    for (var _b = __values(Object.entries(definition)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var _d = __read(_c.value, 2),\n          propertyName = _d[0],\n          value = _d[1];\n\n      var propertyPath = parentPath ? __spreadArray(__spreadArray([], __read(parentPath)), [propertyName]) : [propertyName]; // Primary key.\n\n      if (value instanceof primaryKey_1.PrimaryKey) {\n        outvariant_1.invariant(!result.primaryKey, 'Failed to parse a model definition for \"%s\": cannot have both properties \"%s\" and \"%s\" as a primary key.', modelName, result.primaryKey, propertyName);\n        outvariant_1.invariant(!parentPath, 'Failed to parse a model definition for \"%s\" property of \"%s\": cannot have a primary key in a nested object.', parentPath === null || parentPath === void 0 ? void 0 : parentPath.join('.'), modelName);\n        result.primaryKey = propertyName;\n        result.properties.push([propertyName]);\n        continue;\n      }\n\n      if (value instanceof nullable_1.NullableProperty) {\n        // Add nullable properties to the same list as regular properties\n        result.properties.push(propertyPath);\n        continue;\n      } // Relations.\n\n\n      if (value instanceof Relation_1.Relation) {\n        // Store the relations in a separate object.\n        result.relations.push({\n          propertyPath: propertyPath,\n          relation: value\n        });\n        continue;\n      } // Nested objects.\n\n\n      if (isObject_1.isObject(value)) {\n        deepParseModelDefinition(dictionary, modelName, value, propertyPath, result);\n        continue;\n      } // Regular properties.\n\n\n      result.properties.push(propertyPath);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return result;\n}\n\nfunction parseModelDefinition(dictionary, modelName, definition) {\n  log('parsing model definition for \"%s\" entity', modelName, definition);\n  var result = deepParseModelDefinition(dictionary, modelName, definition);\n  outvariant_1.invariant(result.primaryKey, 'Failed to parse a model definition for \"%s\": model is missing a primary key. Did you forget to mark one of its properties using the \"primaryKey\" function?', modelName);\n  return result;\n}\n\nexports.parseModelDefinition = parseModelDefinition;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/Nodric/finnal/node_modules/@mswjs/data/lib/model/parseModelDefinition.js"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","__spreadArray","to","from","il","j","exports","__esModule","parseModelDefinition","debug_1","require","outvariant_1","primaryKey_1","isObject_1","Relation_1","nullable_1","log","debug","deepParseModelDefinition","dictionary","modelName","definition","parentPath","result","e_1","_a","primaryKey","undefined","properties","relations","_b","Object","entries","_c","_d","propertyName","propertyPath","PrimaryKey","invariant","join","NullableProperty","Relation","relation","isObject","e_1_1"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nexports.__esModule = true;\nexports.parseModelDefinition = void 0;\nvar debug_1 = require(\"debug\");\nvar outvariant_1 = require(\"outvariant\");\nvar primaryKey_1 = require(\"../primaryKey\");\nvar isObject_1 = require(\"../utils/isObject\");\nvar Relation_1 = require(\"../relations/Relation\");\nvar nullable_1 = require(\"../nullable\");\nvar log = debug_1.debug('parseModelDefinition');\n/**\n * Recursively parses a given model definition into properties and relations.\n */\nfunction deepParseModelDefinition(dictionary, modelName, definition, parentPath, result) {\n    var e_1, _a;\n    if (result === void 0) { result = {\n        primaryKey: undefined,\n        properties: [],\n        relations: []\n    }; }\n    if (parentPath) {\n        log('parsing a nested model definition for \"%s\" property at \"%s\"', parentPath, modelName, definition);\n    }\n    try {\n        for (var _b = __values(Object.entries(definition)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), propertyName = _d[0], value = _d[1];\n            var propertyPath = parentPath\n                ? __spreadArray(__spreadArray([], __read(parentPath)), [propertyName]) : [propertyName];\n            // Primary key.\n            if (value instanceof primaryKey_1.PrimaryKey) {\n                outvariant_1.invariant(!result.primaryKey, 'Failed to parse a model definition for \"%s\": cannot have both properties \"%s\" and \"%s\" as a primary key.', modelName, result.primaryKey, propertyName);\n                outvariant_1.invariant(!parentPath, 'Failed to parse a model definition for \"%s\" property of \"%s\": cannot have a primary key in a nested object.', parentPath === null || parentPath === void 0 ? void 0 : parentPath.join('.'), modelName);\n                result.primaryKey = propertyName;\n                result.properties.push([propertyName]);\n                continue;\n            }\n            if (value instanceof nullable_1.NullableProperty) {\n                // Add nullable properties to the same list as regular properties\n                result.properties.push(propertyPath);\n                continue;\n            }\n            // Relations.\n            if (value instanceof Relation_1.Relation) {\n                // Store the relations in a separate object.\n                result.relations.push({ propertyPath: propertyPath, relation: value });\n                continue;\n            }\n            // Nested objects.\n            if (isObject_1.isObject(value)) {\n                deepParseModelDefinition(dictionary, modelName, value, propertyPath, result);\n                continue;\n            }\n            // Regular properties.\n            result.properties.push(propertyPath);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return result;\n}\nfunction parseModelDefinition(dictionary, modelName, definition) {\n    log('parsing model definition for \"%s\" entity', modelName, definition);\n    var result = deepParseModelDefinition(dictionary, modelName, definition);\n    outvariant_1.invariant(result.primaryKey, 'Failed to parse a model definition for \"%s\": model is missing a primary key. Did you forget to mark one of its properties using the \"primaryKey\" function?', modelName);\n    return result;\n}\nexports.parseModelDefinition = parseModelDefinition;\n"]},"metadata":{},"sourceType":"script"}